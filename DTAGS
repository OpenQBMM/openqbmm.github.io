<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>aggregationKernel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/aggregationKernel/</path>
    <filename>a00074</filename>
    <includes id="a00075" name="aggregationKernel.H" local="yes" imported="no">aggregationKernel.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>abce02722c305557cb5730a9610ba0d51</anchor>
      <arglist>(aggregationKernel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a9dd0aa6f3fae81195037437f9fb2042f</anchor>
      <arglist>(aggregationKernel, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aggregationKernel.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/aggregationKernel/</path>
    <filename>a00075</filename>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernel</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
  </compound>
  <compound kind="file">
    <name>AyaziShamlou.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/AyaziShamlou/</path>
    <filename>a00076</filename>
    <includes id="a00077" name="AyaziShamlou.H" local="yes" imported="no">AyaziShamlou.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::breakupKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>aee88bb613072a5f64915965fd870f306</anchor>
      <arglist>(AyaziShamlou, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>ae91cc006297638cdc5e7a12a87ce8e8d</anchor>
      <arglist>(breakupKernel, AyaziShamlou, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AyaziShamlou.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/AyaziShamlou/</path>
    <filename>a00077</filename>
    <includes id="a00083" name="breakupKernel.H" local="yes" imported="no">breakupKernel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::breakupKernels::AyaziShamlou</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::breakupKernels</namespace>
  </compound>
  <compound kind="file">
    <name>basicFieldMomentInversion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/fieldMomentInversion/basicFieldMomentInversion/</path>
    <filename>a00078</filename>
    <includes id="a00079" name="basicFieldMomentInversion.H" local="yes" imported="no">basicFieldMomentInversion.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ae421e805e1c811481923fc7b9556487b</anchor>
      <arglist>(basicFieldMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>afb6d54b8864cf92eb887585f1fbd72b5</anchor>
      <arglist>(fieldMomentInversion, basicFieldMomentInversion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basicFieldMomentInversion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/fieldMomentInversion/basicFieldMomentInversion/</path>
    <filename>a00079</filename>
    <includes id="a00121" name="fieldMomentInversion.H" local="yes" imported="no">fieldMomentInversion.H</includes>
    <includes id="a00239" name="univariateMomentSet.H" local="yes" imported="no">univariateMomentSet.H</includes>
    <includes id="a00236" name="univariateMomentInversion.H" local="yes" imported="no">univariateMomentInversion.H</includes>
    <class kind="class">Foam::basicFieldMomentInversion</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>betaEQMOM.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/extended/beta/</path>
    <filename>a00080</filename>
    <includes id="a00081" name="betaEQMOM.H" local="yes" imported="no">betaEQMOM.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>aba3b5bd4e77aefe9210dac8bc85eaf71</anchor>
      <arglist>(betaEQMOM, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a48cb1021f5b67b9795c0f17ac2d5e2a6</anchor>
      <arglist>(extendedMomentInversion, betaEQMOM, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>betaEQMOM.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/extended/beta/</path>
    <filename>a00081</filename>
    <includes id="a00119" name="extendedMomentInversion.H" local="yes" imported="no">extendedMomentInversion.H</includes>
    <class kind="class">Foam::betaEQMOM</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>breakupKernel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/breakupKernel/</path>
    <filename>a00082</filename>
    <includes id="a00083" name="breakupKernel.H" local="yes" imported="no">breakupKernel.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>ab205061f0523b0c0145ab52cb5a15fa7</anchor>
      <arglist>(breakupKernel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a226d16ce92fe729b204a751b4b002599</anchor>
      <arglist>(breakupKernel, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>breakupKernel.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/breakupKernel/</path>
    <filename>a00083</filename>
    <class kind="class">Foam::populationBalanceSubModels::breakupKernel</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
  </compound>
  <compound kind="file">
    <name>Brownian.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/Brownian/</path>
    <filename>a00084</filename>
    <includes id="a00085" name="Brownian.H" local="yes" imported="no">Brownian.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a076221bfaf795356aff635f898ab8962</anchor>
      <arglist>(Brownian, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a4c6c4b45a7436ec7f10b0bcd7b9d3a75</anchor>
      <arglist>(aggregationKernel, Brownian, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Brownian.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/Brownian/</path>
    <filename>a00085</filename>
    <includes id="a00075" name="aggregationKernel.H" local="yes" imported="no">aggregationKernel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernels::Brownian</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
  </compound>
  <compound kind="file">
    <name>buoyantPbePimpleFoam.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/buoyantPbePimpleFoam/</path>
    <filename>a00086</filename>
    <includes id="a00205" name="populationBalanceModel.H" local="yes" imported="no">populationBalanceModel.H</includes>
    <includes id="a00096" name="buoyantPbePimpleFoam/createFields.H" local="yes" imported="no">createFields.H</includes>
    <includes id="a00229" name="UEqn.H" local="yes" imported="no">UEqn.H</includes>
    <includes id="a00109" name="EEqn.H" local="yes" imported="no">EEqn.H</includes>
    <includes id="a00203" name="pEqn.H" local="yes" imported="no">pEqn.H</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>a00086.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>conditionalMomentInversion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/multivariate/conditional/</path>
    <filename>a00087</filename>
    <includes id="a00088" name="conditionalMomentInversion.H" local="yes" imported="no">conditionalMomentInversion.H</includes>
  </compound>
  <compound kind="file">
    <name>conditionalMomentInversion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/multivariate/conditional/</path>
    <filename>a00088</filename>
    <includes id="a00239" name="univariateMomentSet.H" local="yes" imported="no">univariateMomentSet.H</includes>
    <includes id="a00236" name="univariateMomentInversion.H" local="yes" imported="no">univariateMomentInversion.H</includes>
    <includes id="a00247" name="Vandermonde.H" local="yes" imported="no">Vandermonde.H</includes>
    <includes id="a00169" name="nDimensionalMappedList.H" local="yes" imported="no">nDimensionalMappedList.H</includes>
    <includes id="a00089" name="conditionalMomentInversionI.H" local="yes" imported="no">conditionalMomentInversionI.H</includes>
    <class kind="class">Foam::conditionalMomentInversion</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>conditionalMomentInversionI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/multivariate/conditional/</path>
    <filename>a00089</filename>
  </compound>
  <compound kind="file">
    <name>constantAggregation.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/constantAggregation/</path>
    <filename>a00090</filename>
    <includes id="a00091" name="constantAggregation.H" local="yes" imported="no">constantAggregation.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>af835c9d013a20a975c6f4e57ee9149c8</anchor>
      <arglist>(constantAggregation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>ace2c634a7ff538fbb4744268b13a2c6a</anchor>
      <arglist>(aggregationKernel, constantAggregation, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>constantAggregation.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/constantAggregation/</path>
    <filename>a00091</filename>
    <includes id="a00075" name="aggregationKernel.H" local="yes" imported="no">aggregationKernel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernels::constantAggregation</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
  </compound>
  <compound kind="file">
    <name>constantBreakup.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/constantBreakup/</path>
    <filename>a00092</filename>
    <includes id="a00093" name="constantBreakup.H" local="yes" imported="no">constantBreakup.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::breakupKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>a4338754b0aa20aed5a47b1d88f7fa364</anchor>
      <arglist>(constantBreakup, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>a7337b8a9505305ea7461d4aa5aee0c6f</anchor>
      <arglist>(breakupKernel, constantBreakup, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>constantBreakup.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/constantBreakup/</path>
    <filename>a00093</filename>
    <includes id="a00083" name="breakupKernel.H" local="yes" imported="no">breakupKernel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::breakupKernels::constantBreakup</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::breakupKernels</namespace>
  </compound>
  <compound kind="file">
    <name>constantGrowth.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/growthModels/constantGrowth/</path>
    <filename>a00094</filename>
    <includes id="a00095" name="constantGrowth.H" local="yes" imported="no">constantGrowth.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::growthModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00263.html</anchorfile>
      <anchor>a05800d31989e6a63a1927724fcce12e4</anchor>
      <arglist>(constantGrowth, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00263.html</anchorfile>
      <anchor>a6ad7bf9e04f9a2619c1348631b695132</anchor>
      <arglist>(growthModel, constantGrowth, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>constantGrowth.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/growthModels/constantGrowth/</path>
    <filename>a00095</filename>
    <includes id="a00136" name="growthModel.H" local="yes" imported="no">growthModel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::growthModels::constantGrowth</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::growthModels</namespace>
  </compound>
  <compound kind="file">
    <name>buoyantPbePimpleFoam/createFields.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/buoyantPbePimpleFoam/</path>
    <filename>a00096</filename>
    <member kind="function">
      <type>Info&lt;&lt; &quot;Reading thermophysical properties\n&quot;&lt;&lt; endl;autoPtr&lt; rhoThermo &gt;</type>
      <name>pThermo</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>abe69f56d2542c42d3087a7412902b44a</anchor>
      <arglist>(rhoThermo::New(mesh))</arglist>
    </member>
    <member kind="function">
      <type>thermo</type>
      <name>validate</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>a5799e0a833b5865ada8f84d88a03a8c1</anchor>
      <arglist>(args.executable(),&quot;h&quot;,&quot;e&quot;)</arglist>
    </member>
    <member kind="function">
      <type>volScalarField</type>
      <name>rho</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>aa74838e1f8f89be91e7a5f1d70d08fb1</anchor>
      <arglist>(IOobject(                                    &quot;rho&quot;,                                       runTime.timeName(),                                       mesh,                                       IOobject::NO_READ,                                       IOobject::NO_WRITE                       ), thermo.rho())</arglist>
    </member>
    <member kind="function">
      <type>Info&lt;&lt; &quot;Reading field U\n&quot;&lt;&lt; endl;volVectorField U(IOobject(&quot;U&quot;, runTime.timeName(), mesh, IOobject::MUST_READ, IOobject::AUTO_WRITE), mesh);Info&lt;&lt; &quot;Creating turbulence model\n&quot;&lt;&lt; endl;autoPtr&lt; compressible::turbulenceModel &gt;</type>
      <name>turbulence</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>ac06391579e3bd64067c1f6a8e84e6f35</anchor>
      <arglist>(compressible::turbulenceModel::New(                                       rho,                                       U,                                       phi,                                       thermo                       ))</arglist>
    </member>
    <member kind="variable">
      <type>rhoThermo &amp;</type>
      <name>thermo</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>aad0c921770bd26de425cedad0c8ae8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volScalarField &amp;</type>
      <name>p</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>a334650304cdcdff41898bee9eaf2e3db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const volScalarField &amp;</type>
      <name>psi</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>aba679271c41582099c8ccf4827fdf217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Info&lt;&lt; &quot;Reading field p_rgh\n&quot;&lt;&lt; endl;volScalarField p_rgh(IOobject(&quot;p_rgh&quot;, runTime.timeName(), mesh, IOobject::MUST_READ, IOobject::AUTO_WRITE), mesh);p_rgh=p-rho *gh;mesh.setFluxRequired(p_rgh.name());Info&lt;&lt; &quot;Creating field dpdt\n&quot;&lt;&lt; endl;volScalarField dpdt(IOobject(&quot;dpdt&quot;, runTime.timeName(), mesh), mesh, dimensionedScalar(&quot;dpdt&quot;, p.dimensions()/dimTime, 0));Info&lt;&lt; &quot;Creating field kinetic energy K\n&quot;&lt;&lt; endl;volScalarField K(&quot;K&quot;, 0.5 *magSqr(U));Info&lt;&lt; &quot;Reading populationBalanceProperties\n&quot;&lt;&lt; endl;IOdictionary populationBalanceProperties(IOobject(&quot;populationBalanceProperties&quot;, runTime.constant(), mesh, IOobject::MUST_READ_IF_MODIFIED, IOobject::NO_WRITE));autoPtr&lt; populationBalanceModel &gt;</type>
      <name>populationBalance</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>af238d5f26618a0393bfdeaa9ca937c61</anchor>
      <arglist>(populationBalanceModel::New(                                    &quot;populationBalance&quot;, populationBalanceProperties, phi                       ))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mixingTransportFoam/createFields.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/mixingTransportFoam/</path>
    <filename>a00097</filename>
    <member kind="function">
      <type>Info&lt;&lt; &quot;Reading thermophysical properties\n&quot;&lt;&lt; endl;autoPtr&lt; rhoThermo &gt;</type>
      <name>pThermo</name>
      <anchorfile>a00097.html</anchorfile>
      <anchor>abe69f56d2542c42d3087a7412902b44a</anchor>
      <arglist>(rhoThermo::New(mesh))</arglist>
    </member>
    <member kind="function">
      <type>thermo</type>
      <name>validate</name>
      <anchorfile>a00097.html</anchorfile>
      <anchor>a5799e0a833b5865ada8f84d88a03a8c1</anchor>
      <arglist>(args.executable(),&quot;h&quot;,&quot;e&quot;)</arglist>
    </member>
    <member kind="function">
      <type>volScalarField</type>
      <name>rho</name>
      <anchorfile>a00097.html</anchorfile>
      <anchor>aa74838e1f8f89be91e7a5f1d70d08fb1</anchor>
      <arglist>(IOobject(                                    &quot;rho&quot;,                                       runTime.timeName(),                                       mesh,                                       IOobject::NO_READ,                                       IOobject::NO_WRITE                       ), thermo.rho())</arglist>
    </member>
    <member kind="function">
      <type>Info&lt;&lt; &quot;Reading field U\n&quot;&lt;&lt; endl;volVectorField U(IOobject(&quot;U&quot;, runTime.timeName(), mesh, IOobject::MUST_READ, IOobject::AUTO_WRITE), mesh);Info&lt;&lt; &quot;Creating turbulence model\n&quot;&lt;&lt; endl;autoPtr&lt; compressible::turbulenceModel &gt;</type>
      <name>turbulence</name>
      <anchorfile>a00097.html</anchorfile>
      <anchor>ac06391579e3bd64067c1f6a8e84e6f35</anchor>
      <arglist>(compressible::turbulenceModel::New(                                       rho,                                       U,                                       phi,                                       thermo                       ))</arglist>
    </member>
    <member kind="variable">
      <type>rhoThermo &amp;</type>
      <name>thermo</name>
      <anchorfile>a00097.html</anchorfile>
      <anchor>aad0c921770bd26de425cedad0c8ae8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volScalarField &amp;</type>
      <name>p</name>
      <anchorfile>a00097.html</anchorfile>
      <anchor>a334650304cdcdff41898bee9eaf2e3db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Info&lt;&lt; &quot;Calculating field g.h\n&quot;&lt;&lt; endl;volScalarField gh(&quot;gh&quot;, g &amp;mesh.C());surfaceScalarField ghf(&quot;ghf&quot;, g &amp;mesh.Cf());Info&lt;&lt; &quot;Reading field p_rgh\n&quot;&lt;&lt; endl;volScalarField p_rgh(IOobject(&quot;p_rgh&quot;, runTime.timeName(), mesh, IOobject::MUST_READ, IOobject::AUTO_WRITE), mesh);p_rgh=p-rho *gh;label pRefCell=0;scalar pRefValue=0.0;setRefCell(p, p_rgh, pimple.dict(), pRefCell, pRefValue);Info&lt;&lt; &quot;Reading mixingProperties\n&quot;&lt;&lt; endl;IOdictionary mixingProperties(IOobject(&quot;mixingProperties&quot;, runTime.constant(), mesh, IOobject::MUST_READ_IF_MODIFIED, IOobject::NO_WRITE));surfaceScalarField phiByRho(&quot;phiByRho&quot;, phi/fvc::interpolate(rho));autoPtr&lt; mixingModel &gt;</type>
      <name>mixing</name>
      <anchorfile>a00097.html</anchorfile>
      <anchor>aee75455a3675deb5b01fdde695d18200</anchor>
      <arglist>(mixingModel::New(                                    &quot;mixing&quot;, mixingProperties, phiByRho                       ))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pbeFoam/createFields.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/pbeFoam/</path>
    <filename>a00098</filename>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>ab92b9dd4dbbce3fb3ffc8bfbf3552f4e</anchor>
      <arglist>(mesh.nCells()!=1)</arglist>
    </member>
    <member kind="function">
      <type>Info&lt;&lt; nl&lt;&lt; &quot;Reading thermophysical properties\n&quot;&lt;&lt; endl;autoPtr&lt; psiThermo &gt;</type>
      <name>pThermo</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>a7527b65b79108f3eb3799b88370cd144</anchor>
      <arglist>(psiThermo::New(mesh))</arglist>
    </member>
    <member kind="function">
      <type>thermo</type>
      <name>validate</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>a5799e0a833b5865ada8f84d88a03a8c1</anchor>
      <arglist>(args.executable(),&quot;h&quot;,&quot;e&quot;)</arglist>
    </member>
    <member kind="function">
      <type>volScalarField</type>
      <name>rho</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>ad64697a7bccdd22d7300f9ff52dcdbfc</anchor>
      <arglist>(IOobject(                                    &quot;rho&quot;,                                       runTime.timeName(),                                       mesh,                                       IOobject::NO_READ,                                       IOobject::AUTO_WRITE                       ), thermo.rho())</arglist>
    </member>
    <member kind="function">
      <type>volVectorField</type>
      <name>U</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>a2cf53f2d880076e92789c7297fc0423d</anchor>
      <arglist>(IOobject(                                    &quot;U&quot;,                                       runTime.timeName(),                                       mesh,                                       IOobject::NO_READ,                                       IOobject::NO_WRITE                       ), mesh, dimensionedVector(&quot;zero&quot;, dimVelocity, vector::zero), p.boundaryField().types())</arglist>
    </member>
    <member kind="function">
      <type>Info&lt;&lt; &quot;Creating turbulence model.\n&quot;&lt;&lt; endl;autoPtr&lt; compressible::turbulenceModel &gt;</type>
      <name>turbulence</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>a1c429db236c593344360ec76e4a55df6</anchor>
      <arglist>(compressible::turbulenceModel::New(                                       rho,                                       U,                                       phi,                                       thermo                       ))</arglist>
    </member>
    <member kind="function">
      <type>Info&lt;&lt; &quot;Reading populationBalanceProperties\n&quot;&lt;&lt; endl;IOdictionary populationBalanceProperties(IOobject(&quot;populationBalanceProperties&quot;, runTime.constant(), mesh, IOobject::MUST_READ_IF_MODIFIED, IOobject::NO_WRITE));autoPtr&lt; populationBalanceModel &gt;</type>
      <name>populationBalance</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>a045663f4195add2d0909fda9391fab6d</anchor>
      <arglist>(populationBalanceModel::New(                                    &quot;populationBalance&quot;,                                       populationBalanceProperties,                                       phi                       ))</arglist>
    </member>
    <member kind="variable">
      <type>psiThermo &amp;</type>
      <name>thermo</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>a0250ef8e3f4fe4312875a0fc54bf3c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volScalarField &amp;</type>
      <name>p</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>a334650304cdcdff41898bee9eaf2e3db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pbeTransportFoam/createFields.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/pbeTransportFoam/</path>
    <filename>a00099</filename>
    <member kind="function">
      <type>Info&lt;&lt; &quot;Reading thermophysical properties\n&quot;&lt;&lt; endl;autoPtr&lt; rhoThermo &gt;</type>
      <name>pThermo</name>
      <anchorfile>a00099.html</anchorfile>
      <anchor>abe69f56d2542c42d3087a7412902b44a</anchor>
      <arglist>(rhoThermo::New(mesh))</arglist>
    </member>
    <member kind="function">
      <type>thermo</type>
      <name>validate</name>
      <anchorfile>a00099.html</anchorfile>
      <anchor>a5799e0a833b5865ada8f84d88a03a8c1</anchor>
      <arglist>(args.executable(),&quot;h&quot;,&quot;e&quot;)</arglist>
    </member>
    <member kind="function">
      <type>volScalarField</type>
      <name>rho</name>
      <anchorfile>a00099.html</anchorfile>
      <anchor>aa74838e1f8f89be91e7a5f1d70d08fb1</anchor>
      <arglist>(IOobject(                                    &quot;rho&quot;,                                       runTime.timeName(),                                       mesh,                                       IOobject::NO_READ,                                       IOobject::NO_WRITE                       ), thermo.rho())</arglist>
    </member>
    <member kind="function">
      <type>Info&lt;&lt; &quot;Reading field U\n&quot;&lt;&lt; endl;volVectorField U(IOobject(&quot;U&quot;, runTime.timeName(), mesh, IOobject::MUST_READ, IOobject::AUTO_WRITE), mesh);Info&lt;&lt; &quot;Creating turbulence model\n&quot;&lt;&lt; endl;autoPtr&lt; compressible::turbulenceModel &gt;</type>
      <name>turbulence</name>
      <anchorfile>a00099.html</anchorfile>
      <anchor>ac06391579e3bd64067c1f6a8e84e6f35</anchor>
      <arglist>(compressible::turbulenceModel::New(                                       rho,                                       U,                                       phi,                                       thermo                       ))</arglist>
    </member>
    <member kind="variable">
      <type>rhoThermo &amp;</type>
      <name>thermo</name>
      <anchorfile>a00099.html</anchorfile>
      <anchor>aad0c921770bd26de425cedad0c8ae8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volScalarField &amp;</type>
      <name>p</name>
      <anchorfile>a00099.html</anchorfile>
      <anchor>a334650304cdcdff41898bee9eaf2e3db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Info&lt;&lt; &quot;Calculating field g.h\n&quot;&lt;&lt; endl;volScalarField gh(&quot;gh&quot;, g &amp;mesh.C());surfaceScalarField ghf(&quot;ghf&quot;, g &amp;mesh.Cf());Info&lt;&lt; &quot;Reading field p_rgh\n&quot;&lt;&lt; endl;volScalarField p_rgh(IOobject(&quot;p_rgh&quot;, runTime.timeName(), mesh, IOobject::MUST_READ, IOobject::AUTO_WRITE), mesh);p_rgh=p-rho *gh;label pRefCell=0;scalar pRefValue=0.0;setRefCell(p, p_rgh, pimple.dict(), pRefCell, pRefValue);Info&lt;&lt; &quot;Reading populationBalanceProperties\n&quot;&lt;&lt; endl;IOdictionary populationBalanceProperties(IOobject(&quot;populationBalanceProperties&quot;, runTime.constant(), mesh, IOobject::MUST_READ_IF_MODIFIED, IOobject::NO_WRITE));surfaceScalarField phiByRho(&quot;phiByRho&quot;, phi/fvc::interpolate(rho));autoPtr&lt; populationBalanceModel &gt;</type>
      <name>populationBalance</name>
      <anchorfile>a00099.html</anchorfile>
      <anchor>a85ef080b591b16bd8842a924cc220a73</anchor>
      <arglist>(populationBalanceModel::New(                                    &quot;populationBalance&quot;, populationBalanceProperties, phiByRho                       ))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>createSingleCellMesh.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/pbeFoam/</path>
    <filename>a00100</filename>
    <member kind="function">
      <type>Info&lt;&lt; &quot;Constructing single cell mesh&quot;&lt;&lt; nl&lt;&lt; endl;labelList owner(6, label(0));labelList neighbour(0);pointField points(8);points[0]=vector(0, 0, 0);points[1]=vector(1, 0, 0);points[2]=vector(1, 1, 0);points[3]=vector(0, 1, 0);points[4]=vector(0, 0, 1);points[5]=vector(1, 0, 1);points[6]=vector(1, 1, 1);points[7]=vector(0, 1, 1);const cellModel &amp;hexa=*(cellModeller::lookup(&quot;hex&quot;));faceList faces=hexa.modelFaces();fvMesh mesh(IOobject(fvMesh::defaultRegion, runTime.timeName(), runTime, IOobject::READ_IF_PRESENT), xferMove&lt; Field&lt; vector &gt;&gt;(points), faces.xfer(), owner.xfer(), neighbour.xfer());List&lt; polyPatch * &gt;</type>
      <name>patches</name>
      <anchorfile>a00100.html</anchorfile>
      <anchor>a36a9f0467bdd55ece250a2d8e21bfdab</anchor>
      <arglist>(1)</arglist>
    </member>
    <member kind="function">
      <type>mesh</type>
      <name>addFvPatches</name>
      <anchorfile>a00100.html</anchorfile>
      <anchor>aba98bd4bf2ae6ad20eaee4b756080d6f</anchor>
      <arglist>(patches)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>patches</name>
      <anchorfile>a00100.html</anchorfile>
      <anchor>a6eea546b8fab7318f4d0d67e4ff28fde</anchor>
      <arglist>[0]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>daughterDistribution.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/daughterDistribution/</path>
    <filename>a00101</filename>
    <includes id="a00102" name="daughterDistribution.H" local="yes" imported="no">daughterDistribution.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a76416983309f14ff79252f78e2ba5f45</anchor>
      <arglist>(daughterDistribution, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a43b4a6fcc71e245c8ade315846b6d6a5</anchor>
      <arglist>(daughterDistribution, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>daughterDistribution.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/daughterDistribution/</path>
    <filename>a00102</filename>
    <class kind="class">Foam::populationBalanceSubModels::daughterDistribution</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
  </compound>
  <compound kind="file">
    <name>differentialForceAggregation.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/differentialForceAggregation/</path>
    <filename>a00103</filename>
    <includes id="a00104" name="differentialForceAggregation.H" local="yes" imported="no">differentialForceAggregation.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a901fe18b45ba8ca91a036e0ca43a3916</anchor>
      <arglist>(differentialForceAggregation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a61b52f2b3984830ce75e98417e4a1503</anchor>
      <arglist>(aggregationKernel, differentialForceAggregation, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>differentialForceAggregation.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/differentialForceAggregation/</path>
    <filename>a00104</filename>
    <includes id="a00075" name="aggregationKernel.H" local="yes" imported="no">aggregationKernel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernels::differentialForceAggregation</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
  </compound>
  <compound kind="file">
    <name>mixingModels/mixingSubModels/diffusionModels/diffusionModel/diffusionModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/diffusionModels/diffusionModel/</path>
    <filename>a00105</filename>
    <includes id="a00107" name="mixingModels/mixingSubModels/diffusionModels/diffusionModel/diffusionModel.H" local="yes" imported="no">diffusionModel.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00251.html</anchorfile>
      <anchor>a35d38e6f01483fb934bf952c4d16dc9e</anchor>
      <arglist>(diffusionModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00251.html</anchorfile>
      <anchor>a66987e2e267fbb32d0569ccf0a28b87d</anchor>
      <arglist>(diffusionModel, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>populationBalanceModels/populationBalanceSubModels/diffusionModels/diffusionModel/diffusionModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/diffusionModels/diffusionModel/</path>
    <filename>a00106</filename>
    <includes id="a00108" name="populationBalanceModels/populationBalanceSubModels/diffusionModels/diffusionModel/diffusionModel.H" local="yes" imported="no">diffusionModel.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a31a8f344b0539bd5cce6c4f4576aa297</anchor>
      <arglist>(diffusionModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a448ce681381f516ef5a82ad59235caa1</anchor>
      <arglist>(diffusionModel, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mixingModels/mixingSubModels/diffusionModels/diffusionModel/diffusionModel.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/diffusionModels/diffusionModel/</path>
    <filename>a00107</filename>
    <class kind="class">Foam::mixingSubModels::diffusionModel</class>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
  </compound>
  <compound kind="file">
    <name>populationBalanceModels/populationBalanceSubModels/diffusionModels/diffusionModel/diffusionModel.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/diffusionModels/diffusionModel/</path>
    <filename>a00108</filename>
    <class kind="class">Foam::populationBalanceSubModels::diffusionModel</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
  </compound>
  <compound kind="file">
    <name>EEqn.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/buoyantPbePimpleFoam/</path>
    <filename>a00109</filename>
    <member kind="function">
      <type>fvScalarMatrix</type>
      <name>EEqn</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>ab891d614aa8b3eff1a21297f22e90bfc</anchor>
      <arglist>(fvm::ddt(rho, he)+fvm::div(phi, he)+fvc::ddt(rho, K)+fvc::div(phi, K)+(                                       he.name()==&quot;e&quot;                               ?fvc::div                                       (                                                       fvc::absolute(phi/fvc::interpolate(rho), U),                                                       p,                                                    &quot;div(phiv,p)&quot;                                       )                               :-dpdt                       )-fvm::laplacian(turbulence-&gt;alphaEff(), he)==radiation-&gt;Sh(thermo)+fvOptions(rho, he))</arglist>
    </member>
    <member kind="function">
      <type>EEqn</type>
      <name>relax</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>a9b1e3cf7921c1d57830a6970779f3d24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>fvOptions</type>
      <name>constrain</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>a99e52b6aa83a3087ae81ccb1030aceef</anchor>
      <arglist>(EEqn)</arglist>
    </member>
    <member kind="function">
      <type>EEqn</type>
      <name>solve</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>ac123867940006fb14e8346d9bdc38f8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>fvOptions</type>
      <name>correct</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>a45936480b8c1b0bb71ede46b78d0269d</anchor>
      <arglist>(he)</arglist>
    </member>
    <member kind="function">
      <type>thermo</type>
      <name>correct</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>a8f2ec7df0ad2ec79360a5d964f55de87</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>eigenSolver.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/eigenSolver/</path>
    <filename>a00110</filename>
    <includes id="a00111" name="eigenSolver.H" local="yes" imported="no">eigenSolver.H</includes>
  </compound>
  <compound kind="file">
    <name>eigenSolver.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/eigenSolver/</path>
    <filename>a00111</filename>
    <class kind="class">Foam::eigenSolver</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>erosion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/erosion/</path>
    <filename>a00112</filename>
    <includes id="a00113" name="erosion.H" local="yes" imported="no">erosion.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::daughterDistributions</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a01f727723bb2f7668ab5bc761f4c248a</anchor>
      <arglist>(erosion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a62e79e44ef758cea9472b6d5dd80c766</anchor>
      <arglist>(daughterDistribution, erosion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>erosion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/erosion/</path>
    <filename>a00113</filename>
    <includes id="a00102" name="daughterDistribution.H" local="yes" imported="no">daughterDistribution.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::daughterDistributions::erosion</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::daughterDistributions</namespace>
  </compound>
  <compound kind="file">
    <name>exponentialBreakup.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/exponentialBreakup/</path>
    <filename>a00114</filename>
    <includes id="a00115" name="exponentialBreakup.H" local="yes" imported="no">exponentialBreakup.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::breakupKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>a454f3683df96243c1c3df745293c4541</anchor>
      <arglist>(exponentialBreakup, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>a5bfa78660a2a6bf5acc7c81106fde397</anchor>
      <arglist>(breakupKernel, exponentialBreakup, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>exponentialBreakup.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/exponentialBreakup/</path>
    <filename>a00115</filename>
    <includes id="a00083" name="breakupKernel.H" local="yes" imported="no">breakupKernel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::breakupKernels::exponentialBreakup</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::breakupKernels</namespace>
  </compound>
  <compound kind="file">
    <name>extendedFieldMomentInversion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/fieldMomentInversion/extendedFieldMomentInversion/</path>
    <filename>a00116</filename>
    <includes id="a00117" name="extendedFieldMomentInversion.H" local="yes" imported="no">extendedFieldMomentInversion.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a0c214123cdb6bf17bd34e6ba3a78e85f</anchor>
      <arglist>(extendedFieldMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a081c8abae783263ca5c2d8749b9cad86</anchor>
      <arglist>(fieldMomentInversion, extendedFieldMomentInversion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>extendedFieldMomentInversion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/fieldMomentInversion/extendedFieldMomentInversion/</path>
    <filename>a00117</filename>
    <includes id="a00121" name="fieldMomentInversion.H" local="yes" imported="no">fieldMomentInversion.H</includes>
    <includes id="a00239" name="univariateMomentSet.H" local="yes" imported="no">univariateMomentSet.H</includes>
    <includes id="a00119" name="extendedMomentInversion.H" local="yes" imported="no">extendedMomentInversion.H</includes>
    <class kind="class">Foam::extendedFieldMomentInversion</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>extendedMomentInversion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/extended/extendedMomentInversion/</path>
    <filename>a00118</filename>
    <includes id="a00119" name="extendedMomentInversion.H" local="yes" imported="no">extendedMomentInversion.H</includes>
    <includes id="a00111" name="eigenSolver.H" local="yes" imported="no">eigenSolver.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a9beec8ce64dc3eb33ed3ff09a52d34e5</anchor>
      <arglist>(extendedMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a40163a8d4828ced85dea8a29591c7942</anchor>
      <arglist>(extendedMomentInversion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>extendedMomentInversion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/extended/extendedMomentInversion/</path>
    <filename>a00119</filename>
    <includes id="a00239" name="univariateMomentSet.H" local="yes" imported="no">univariateMomentSet.H</includes>
    <includes id="a00236" name="univariateMomentInversion.H" local="yes" imported="no">univariateMomentInversion.H</includes>
    <class kind="class">Foam::extendedMomentInversion</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>fieldMomentInversion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/fieldMomentInversion/fieldMomentInversion/</path>
    <filename>a00120</filename>
    <includes id="a00121" name="fieldMomentInversion.H" local="yes" imported="no">fieldMomentInversion.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ab5fa56c52c6ef16704a156e8c403a3cd</anchor>
      <arglist>(fieldMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>abb1c2e5ec33b7d24d9997b1e0c9e2a1b</anchor>
      <arglist>(fieldMomentInversion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fieldMomentInversion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/fieldMomentInversion/fieldMomentInversion/</path>
    <filename>a00121</filename>
    <includes id="a00215" name="quadratureNodes.H" local="yes" imported="no">quadratureNodes.H</includes>
    <includes id="a00239" name="univariateMomentSet.H" local="yes" imported="no">univariateMomentSet.H</includes>
    <includes id="a00162" name="momentFieldSets.H" local="yes" imported="no">momentFieldSets.H</includes>
    <includes id="a00122" name="fieldMomentInversionI.H" local="yes" imported="no">fieldMomentInversionI.H</includes>
    <class kind="class">Foam::fieldMomentInversion</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>fieldMomentInversionI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/fieldMomentInversion/fieldMomentInversion/</path>
    <filename>a00122</filename>
  </compound>
  <compound kind="file">
    <name>FokkerPlanck.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/mixingKernels/FokkerPlanck/</path>
    <filename>a00123</filename>
    <includes id="a00124" name="FokkerPlanck.H" local="yes" imported="no">FokkerPlanck.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <namespace>Foam::mixingSubModels::mixingKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00253.html</anchorfile>
      <anchor>a5ee518d2e777e92d55b5142322520192</anchor>
      <arglist>(FokkerPlanck, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00253.html</anchorfile>
      <anchor>a4f2ef8e6b8103aec93807cd5b8659911</anchor>
      <arglist>(mixingKernel, FokkerPlanck, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FokkerPlanck.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/mixingKernels/FokkerPlanck/</path>
    <filename>a00124</filename>
    <includes id="a00149" name="mixingKernel.H" local="yes" imported="no">mixingKernel.H</includes>
    <class kind="class">Foam::mixingSubModels::mixingKernels::FokkerPlanck</class>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <namespace>Foam::mixingSubModels::mixingKernels</namespace>
  </compound>
  <compound kind="file">
    <name>fullFragmentation.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/fullFragmentation/</path>
    <filename>a00125</filename>
    <includes id="a00126" name="fullFragmentation.H" local="yes" imported="no">fullFragmentation.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::daughterDistributions</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a6997e33657a0008b01a9b12b90d7bd10</anchor>
      <arglist>(fullFragmentation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>ae31c29d61fe94ab903b2c5841b3173f8</anchor>
      <arglist>(daughterDistribution, fullFragmentation, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fullFragmentation.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/fullFragmentation/</path>
    <filename>a00126</filename>
    <includes id="a00102" name="daughterDistribution.H" local="yes" imported="no">daughterDistribution.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::daughterDistributions::fullFragmentation</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::daughterDistributions</namespace>
  </compound>
  <compound kind="file">
    <name>gammaEQMOM.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/extended/gamma/</path>
    <filename>a00127</filename>
    <includes id="a00128" name="gammaEQMOM.H" local="yes" imported="no">gammaEQMOM.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a5538d367d57069f3187e09fb0a7d2a9d</anchor>
      <arglist>(gammaEQMOM, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a58f6c31a874dc8c6ef95eb608f2301e0</anchor>
      <arglist>(extendedMomentInversion, gammaEQMOM, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gammaEQMOM.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/extended/gamma/</path>
    <filename>a00128</filename>
    <includes id="a00119" name="extendedMomentInversion.H" local="yes" imported="no">extendedMomentInversion.H</includes>
    <class kind="class">Foam::gammaEQMOM</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>gaussLobattoMomentInversion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/basic/gaussLobattoMomentInversion/</path>
    <filename>a00129</filename>
    <includes id="a00130" name="gaussLobattoMomentInversion.H" local="yes" imported="no">gaussLobattoMomentInversion.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a1870f4400a3553172ddbd7b520d56e70</anchor>
      <arglist>(gaussLobattoMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>abcbde07469f4b6865f880188dfaaed03</anchor>
      <arglist>(univariateMomentInversion, gaussLobattoMomentInversion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gaussLobattoMomentInversion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/basic/gaussLobattoMomentInversion/</path>
    <filename>a00130</filename>
    <includes id="a00236" name="univariateMomentInversion.H" local="yes" imported="no">univariateMomentInversion.H</includes>
    <class kind="class">Foam::gaussLobattoMomentInversion</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>gaussMomentInversion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/basic/gaussMomentInversion/</path>
    <filename>a00131</filename>
    <includes id="a00132" name="gaussMomentInversion.H" local="yes" imported="no">gaussMomentInversion.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ab292baa664c0b1ffe9902ad93185b24f</anchor>
      <arglist>(gaussMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a819bba564847deaf815d6be3f1c72bac</anchor>
      <arglist>(univariateMomentInversion, gaussMomentInversion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gaussMomentInversion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/basic/gaussMomentInversion/</path>
    <filename>a00132</filename>
    <includes id="a00236" name="univariateMomentInversion.H" local="yes" imported="no">univariateMomentInversion.H</includes>
    <class kind="class">Foam::gaussMomentInversion</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>gaussRadauMomentInversion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/basic/gaussRadauMomentInversion/</path>
    <filename>a00133</filename>
    <includes id="a00134" name="gaussRadauMomentInversion.H" local="yes" imported="no">gaussRadauMomentInversion.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ae28a8693ec96aa0ce2f10a129012de21</anchor>
      <arglist>(gaussRadauMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a0b3e4d883035d960f7255cc8bed29329</anchor>
      <arglist>(univariateMomentInversion, gaussRadauMomentInversion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gaussRadauMomentInversion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/basic/gaussRadauMomentInversion/</path>
    <filename>a00134</filename>
    <includes id="a00236" name="univariateMomentInversion.H" local="yes" imported="no">univariateMomentInversion.H</includes>
    <class kind="class">Foam::gaussRadauMomentInversion</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>growthModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/growthModels/growthModel/</path>
    <filename>a00135</filename>
    <includes id="a00136" name="growthModel.H" local="yes" imported="no">growthModel.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a808c3e596bb1cee3b5e795d38419b367</anchor>
      <arglist>(growthModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a7fcd4c8a5852e11ff67830a07a4cfe7b</anchor>
      <arglist>(growthModel, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>growthModel.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/growthModels/growthModel/</path>
    <filename>a00136</filename>
    <class kind="class">Foam::populationBalanceSubModels::growthModel</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
  </compound>
  <compound kind="file">
    <name>hydrodynamicAggregation.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/hydrodynamicAggregation/</path>
    <filename>a00137</filename>
    <includes id="a00138" name="hydrodynamicAggregation.H" local="yes" imported="no">hydrodynamicAggregation.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a636ec3d763c8c887602ea04a51fad475</anchor>
      <arglist>(hydrodynamicAggregation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>af83bce581ea73f24b1228b0fff351b56</anchor>
      <arglist>(aggregationKernel, hydrodynamicAggregation, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hydrodynamicAggregation.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/hydrodynamicAggregation/</path>
    <filename>a00138</filename>
    <includes id="a00075" name="aggregationKernel.H" local="yes" imported="no">aggregationKernel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernels::hydrodynamicAggregation</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
  </compound>
  <compound kind="file">
    <name>IEM.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/mixingKernels/IEM/</path>
    <filename>a00139</filename>
    <includes id="a00140" name="IEM.H" local="yes" imported="no">IEM.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <namespace>Foam::mixingSubModels::mixingKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00253.html</anchorfile>
      <anchor>a17d0080ebb72975f91a6424916c1cb24</anchor>
      <arglist>(IEM, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00253.html</anchorfile>
      <anchor>a9226eeb16fbe06bac390688bc780c047</anchor>
      <arglist>(mixingKernel, IEM, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IEM.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/mixingKernels/IEM/</path>
    <filename>a00140</filename>
    <includes id="a00149" name="mixingKernel.H" local="yes" imported="no">mixingKernel.H</includes>
    <class kind="class">Foam::mixingSubModels::mixingKernels::IEM</class>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <namespace>Foam::mixingSubModels::mixingKernels</namespace>
  </compound>
  <compound kind="file">
    <name>lognormalEQMOM.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/extended/lognormal/</path>
    <filename>a00141</filename>
    <includes id="a00142" name="lognormalEQMOM.H" local="yes" imported="no">lognormalEQMOM.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>abc4d0b6de74a1649ffc1fb65e338c2d7</anchor>
      <arglist>(lognormalEQMOM, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ad5fccf27937c96a424dd25d4f637bcd8</anchor>
      <arglist>(extendedMomentInversion, lognormalEQMOM, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lognormalEQMOM.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/extended/lognormal/</path>
    <filename>a00142</filename>
    <includes id="a00119" name="extendedMomentInversion.H" local="yes" imported="no">extendedMomentInversion.H</includes>
    <class kind="class">Foam::lognormalEQMOM</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>LuoSvendsen.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/LuoSvendsen/</path>
    <filename>a00143</filename>
    <includes id="a00144" name="LuoSvendsen.H" local="yes" imported="no">LuoSvendsen.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::breakupKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>a56da0846e22fec8b96568c9df45a9ff0</anchor>
      <arglist>(LuoSvendsen, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>ab0446f84d3f857ce06af2d4d1e5c4303</anchor>
      <arglist>(breakupKernel, LuoSvendsen, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LuoSvendsen.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/LuoSvendsen/</path>
    <filename>a00144</filename>
    <includes id="a00083" name="breakupKernel.H" local="yes" imported="no">breakupKernel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::breakupKernels::LuoSvendsen</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::breakupKernels</namespace>
  </compound>
  <compound kind="file">
    <name>mainpage.dox</name>
    <path>/home/alberto/Desktop/OpenQBMM/doc/</path>
    <filename>a00145</filename>
  </compound>
  <compound kind="file">
    <name>Miller.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/nucleationModels/Miller/</path>
    <filename>a00146</filename>
    <includes id="a00147" name="Miller.H" local="yes" imported="no">Miller.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::nucleationModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00264.html</anchorfile>
      <anchor>a21c76019aa3870a37ecf5edfc30fcbdb</anchor>
      <arglist>(Miller, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00264.html</anchorfile>
      <anchor>ad2d014bf03b1a0cdaf5ed2889c0bbb2d</anchor>
      <arglist>(nucleationModel, Miller, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Miller.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/nucleationModels/Miller/</path>
    <filename>a00147</filename>
    <includes id="a00195" name="nucleationModel.H" local="yes" imported="no">nucleationModel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::nucleationModels::Miller</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::nucleationModels</namespace>
  </compound>
  <compound kind="file">
    <name>mixingKernel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/mixingKernels/mixingKernel/</path>
    <filename>a00148</filename>
    <includes id="a00149" name="mixingKernel.H" local="yes" imported="no">mixingKernel.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00251.html</anchorfile>
      <anchor>abf81d58a6669ac3c3505cc7bc83fc3ec</anchor>
      <arglist>(mixingKernel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00251.html</anchorfile>
      <anchor>aefa5f150c6459c5dc6b9dd059c74f912</anchor>
      <arglist>(mixingKernel, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mixingKernel.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/mixingKernels/mixingKernel/</path>
    <filename>a00149</filename>
    <includes id="a00162" name="momentFieldSets.H" local="yes" imported="no">momentFieldSets.H</includes>
    <class kind="class">Foam::mixingSubModels::mixingKernel</class>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
  </compound>
  <compound kind="file">
    <name>mixingModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingModel/</path>
    <filename>a00150</filename>
    <includes id="a00151" name="mixingModel.H" local="yes" imported="no">mixingModel.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>adfa73918fc77af1ed8be0d92e9ee1703</anchor>
      <arglist>(mixingModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a147adac4350a271380c85ada44c2559e</anchor>
      <arglist>(mixingModel, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mixingModel.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingModel/</path>
    <filename>a00151</filename>
    <class kind="class">Foam::mixingModel</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>mixingTransportFoam.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/mixingTransportFoam/</path>
    <filename>a00152</filename>
    <includes id="a00151" name="mixingModel.H" local="yes" imported="no">mixingModel.H</includes>
    <includes id="a00097" name="mixingTransportFoam/createFields.H" local="yes" imported="no">createFields.H</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>a00152.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mixingModels/mixingSubModels/diffusionModels/molecularDiffusion/molecularDiffusion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/diffusionModels/molecularDiffusion/</path>
    <filename>a00153</filename>
    <includes id="a00155" name="mixingModels/mixingSubModels/diffusionModels/molecularDiffusion/molecularDiffusion.H" local="yes" imported="no">molecularDiffusion.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <namespace>Foam::mixingSubModels::diffusionModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00252.html</anchorfile>
      <anchor>ae282d355e8bb81dcd60d4c2778f12ba5</anchor>
      <arglist>(molecularDiffusion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00252.html</anchorfile>
      <anchor>a024bbc4b37f0b86ec4a0715a76d74ebc</anchor>
      <arglist>(diffusionModel, molecularDiffusion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>populationBalanceModels/populationBalanceSubModels/diffusionModels/molecularDiffusion/molecularDiffusion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/diffusionModels/molecularDiffusion/</path>
    <filename>a00154</filename>
    <includes id="a00156" name="populationBalanceModels/populationBalanceSubModels/diffusionModels/molecularDiffusion/molecularDiffusion.H" local="yes" imported="no">molecularDiffusion.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::diffusionModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00262.html</anchorfile>
      <anchor>ab0071e5b6f1d125b17b3e41b73e7e39a</anchor>
      <arglist>(molecularDiffusion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00262.html</anchorfile>
      <anchor>a0fccf41a74735fc6de29c475cbcd4742</anchor>
      <arglist>(diffusionModel, molecularDiffusion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mixingModels/mixingSubModels/diffusionModels/molecularDiffusion/molecularDiffusion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/diffusionModels/molecularDiffusion/</path>
    <filename>a00155</filename>
    <class kind="class">Foam::mixingSubModels::diffusionModels::molecularDiffusion</class>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <namespace>Foam::mixingSubModels::diffusionModels</namespace>
  </compound>
  <compound kind="file">
    <name>populationBalanceModels/populationBalanceSubModels/diffusionModels/molecularDiffusion/molecularDiffusion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/diffusionModels/molecularDiffusion/</path>
    <filename>a00156</filename>
    <class kind="class">Foam::populationBalanceSubModels::diffusionModels::molecularDiffusion</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::diffusionModels</namespace>
  </compound>
  <compound kind="file">
    <name>moment.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/moments/</path>
    <filename>a00157</filename>
    <includes id="a00158" name="moment.H" local="yes" imported="no">moment.H</includes>
  </compound>
  <compound kind="file">
    <name>moment.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/moments/</path>
    <filename>a00158</filename>
    <includes id="a00215" name="quadratureNodes.H" local="yes" imported="no">quadratureNodes.H</includes>
    <class kind="class">Foam::moment</class>
    <class kind="class">Foam::moment::iNew</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>momentFieldSet.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/moments/</path>
    <filename>a00159</filename>
    <includes id="a00160" name="momentFieldSet.H" local="yes" imported="no">momentFieldSet.H</includes>
  </compound>
  <compound kind="file">
    <name>momentFieldSet.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/moments/</path>
    <filename>a00160</filename>
    <class kind="class">Foam::momentFieldSet</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>momentFieldSetI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/moments/</path>
    <filename>a00161</filename>
  </compound>
  <compound kind="file">
    <name>momentFieldSets.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/moments/</path>
    <filename>a00162</filename>
    <includes id="a00215" name="quadratureNodes.H" local="yes" imported="no">quadratureNodes.H</includes>
    <includes id="a00164" name="moments.H" local="yes" imported="no">moments.H</includes>
    <includes id="a00160" name="momentFieldSet.H" local="yes" imported="no">momentFieldSet.H</includes>
    <namespace>Foam</namespace>
    <member kind="typedef">
      <type>momentFieldSet&lt; volUnivariateMoment, volScalarNode &gt;</type>
      <name>volUnivariateMomentFieldSet</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ad3c4993319e0afd86f19cfc10dc05503</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>momentFieldSet&lt; surfaceUnivariateMoment, surfaceScalarNode &gt;</type>
      <name>surfaceUnivariateMomentFieldSet</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>aef39351d7073d024b5bd5bea2fc3f279</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>momentI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/moments/</path>
    <filename>a00163</filename>
  </compound>
  <compound kind="file">
    <name>moments.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/moments/</path>
    <filename>a00164</filename>
    <includes id="a00215" name="quadratureNodes.H" local="yes" imported="no">quadratureNodes.H</includes>
    <includes id="a00158" name="moment.H" local="yes" imported="no">moment.H</includes>
    <namespace>Foam</namespace>
    <member kind="typedef">
      <type>moment&lt; volScalarField, volScalarNode &gt;</type>
      <name>volUnivariateMoment</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a1247bdc497fbec0f2b067b84972d3873</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>moment&lt; surfaceScalarField, surfaceScalarNode &gt;</type>
      <name>surfaceUnivariateMoment</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a2e072c80584b4fea8a0173daccfd399a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>momentSet.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentSets/momentSet/</path>
    <filename>a00165</filename>
    <includes id="a00166" name="momentSet.H" local="yes" imported="no">momentSet.H</includes>
  </compound>
  <compound kind="file">
    <name>momentSet.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentSets/momentSet/</path>
    <filename>a00166</filename>
    <includes id="a00167" name="momentSetI.H" local="yes" imported="no">momentSetI.H</includes>
    <class kind="class">Foam::momentSet</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>momentSetI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentSets/momentSet/</path>
    <filename>a00167</filename>
  </compound>
  <compound kind="file">
    <name>nDimensionalMappedList.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/nDimensionalMappedList/</path>
    <filename>a00168</filename>
    <includes id="a00169" name="nDimensionalMappedList.H" local="yes" imported="no">nDimensionalMappedList.H</includes>
  </compound>
  <compound kind="file">
    <name>nDimensionalMappedList.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/nDimensionalMappedList/</path>
    <filename>a00169</filename>
    <class kind="class">Foam::nDimensionalMappedList</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>nDimensionalMappedListI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/nDimensionalMappedList/</path>
    <filename>a00170</filename>
  </compound>
  <compound kind="file">
    <name>newAggregationKernel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/aggregationKernel/</path>
    <filename>a00171</filename>
    <includes id="a00075" name="aggregationKernel.H" local="yes" imported="no">aggregationKernel.H</includes>
  </compound>
  <compound kind="file">
    <name>newBreakupKernel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/breakupKernel/</path>
    <filename>a00172</filename>
    <includes id="a00083" name="breakupKernel.H" local="yes" imported="no">breakupKernel.H</includes>
  </compound>
  <compound kind="file">
    <name>newDaughterDistribution.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/daughterDistribution/</path>
    <filename>a00173</filename>
    <includes id="a00102" name="daughterDistribution.H" local="yes" imported="no">daughterDistribution.H</includes>
  </compound>
  <compound kind="file">
    <name>mixingModels/mixingSubModels/diffusionModels/diffusionModel/newDiffusionModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/diffusionModels/diffusionModel/</path>
    <filename>a00174</filename>
    <includes id="a00107" name="mixingModels/mixingSubModels/diffusionModels/diffusionModel/diffusionModel.H" local="yes" imported="no">diffusionModel.H</includes>
  </compound>
  <compound kind="file">
    <name>populationBalanceModels/populationBalanceSubModels/diffusionModels/diffusionModel/newDiffusionModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/diffusionModels/diffusionModel/</path>
    <filename>a00175</filename>
    <includes id="a00108" name="populationBalanceModels/populationBalanceSubModels/diffusionModels/diffusionModel/diffusionModel.H" local="yes" imported="no">diffusionModel.H</includes>
  </compound>
  <compound kind="file">
    <name>newExtendedMomentInversion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/extended/extendedMomentInversion/</path>
    <filename>a00176</filename>
    <includes id="a00119" name="extendedMomentInversion.H" local="yes" imported="no">extendedMomentInversion.H</includes>
  </compound>
  <compound kind="file">
    <name>newFieldMomentInversion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/fieldMomentInversion/fieldMomentInversion/</path>
    <filename>a00177</filename>
    <includes id="a00121" name="fieldMomentInversion.H" local="yes" imported="no">fieldMomentInversion.H</includes>
  </compound>
  <compound kind="file">
    <name>newGrowthModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/growthModels/growthModel/</path>
    <filename>a00178</filename>
    <includes id="a00136" name="growthModel.H" local="yes" imported="no">growthModel.H</includes>
  </compound>
  <compound kind="file">
    <name>newMixingKernel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/mixingKernels/mixingKernel/</path>
    <filename>a00179</filename>
    <includes id="a00149" name="mixingKernel.H" local="yes" imported="no">mixingKernel.H</includes>
  </compound>
  <compound kind="file">
    <name>newMixingModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingModel/</path>
    <filename>a00180</filename>
    <includes id="a00151" name="mixingModel.H" local="yes" imported="no">mixingModel.H</includes>
  </compound>
  <compound kind="file">
    <name>newNucleationModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/nucleationModels/nucleationModel/</path>
    <filename>a00181</filename>
    <includes id="a00195" name="nucleationModel.H" local="yes" imported="no">nucleationModel.H</includes>
  </compound>
  <compound kind="file">
    <name>newPopulationBalanceModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceModel/</path>
    <filename>a00182</filename>
    <includes id="a00205" name="populationBalanceModel.H" local="yes" imported="no">populationBalanceModel.H</includes>
  </compound>
  <compound kind="file">
    <name>newUnivariateMomentInversion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/basic/univariateMomentInversion/</path>
    <filename>a00183</filename>
    <includes id="a00236" name="univariateMomentInversion.H" local="yes" imported="no">univariateMomentInversion.H</includes>
  </compound>
  <compound kind="file">
    <name>mixingModels/mixingSubModels/diffusionModels/noDiffusion/noDiffusion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/diffusionModels/noDiffusion/</path>
    <filename>a00184</filename>
    <includes id="a00186" name="mixingModels/mixingSubModels/diffusionModels/noDiffusion/noDiffusion.H" local="yes" imported="no">noDiffusion.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <namespace>Foam::mixingSubModels::diffusionModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00252.html</anchorfile>
      <anchor>a432faaba2585abcf703c9b1c67c05331</anchor>
      <arglist>(noDiffusion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00252.html</anchorfile>
      <anchor>a063ffcd74bcfd9ebe3de26bb9433b132</anchor>
      <arglist>(diffusionModel, noDiffusion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>populationBalanceModels/populationBalanceSubModels/diffusionModels/noDiffusion/noDiffusion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/diffusionModels/noDiffusion/</path>
    <filename>a00185</filename>
    <includes id="a00187" name="populationBalanceModels/populationBalanceSubModels/diffusionModels/noDiffusion/noDiffusion.H" local="yes" imported="no">noDiffusion.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::diffusionModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00262.html</anchorfile>
      <anchor>a842aff0e85dca97889ae993504b45e78</anchor>
      <arglist>(noDiffusion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00262.html</anchorfile>
      <anchor>a6fe185b9482c07be061d5601a474029b</anchor>
      <arglist>(diffusionModel, noDiffusion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mixingModels/mixingSubModels/diffusionModels/noDiffusion/noDiffusion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/diffusionModels/noDiffusion/</path>
    <filename>a00186</filename>
    <class kind="class">Foam::mixingSubModels::diffusionModels::noDiffusion</class>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <namespace>Foam::mixingSubModels::diffusionModels</namespace>
  </compound>
  <compound kind="file">
    <name>populationBalanceModels/populationBalanceSubModels/diffusionModels/noDiffusion/noDiffusion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/diffusionModels/noDiffusion/</path>
    <filename>a00187</filename>
    <class kind="class">Foam::populationBalanceSubModels::diffusionModels::noDiffusion</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::diffusionModels</namespace>
  </compound>
  <compound kind="file">
    <name>noMixing.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/noMixing/</path>
    <filename>a00188</filename>
    <includes id="a00189" name="noMixing.H" local="yes" imported="no">noMixing.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00250.html</anchorfile>
      <anchor>acae4135f0a969e5c9ac08c46a86accc1</anchor>
      <arglist>(noMixing, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00250.html</anchorfile>
      <anchor>ade9514ba79b25a6a811619ee6bf9114f</anchor>
      <arglist>(mixingModel, noMixing, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>noMixing.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/noMixing/</path>
    <filename>a00189</filename>
    <includes id="a00151" name="mixingModel.H" local="yes" imported="no">mixingModel.H</includes>
    <class kind="class">Foam::mixingModels::noMixing</class>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingModels</namespace>
  </compound>
  <compound kind="file">
    <name>noNucleation.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/nucleationModels/noNucleation/</path>
    <filename>a00190</filename>
    <includes id="a00191" name="noNucleation.H" local="yes" imported="no">noNucleation.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::nucleationModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00264.html</anchorfile>
      <anchor>a57836ace29d15e34f15b8b253e40611f</anchor>
      <arglist>(noNucleation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00264.html</anchorfile>
      <anchor>aa0ae238b7a248326a8c9c736e41b078e</anchor>
      <arglist>(nucleationModel, noNucleation, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>noNucleation.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/nucleationModels/noNucleation/</path>
    <filename>a00191</filename>
    <includes id="a00195" name="nucleationModel.H" local="yes" imported="no">nucleationModel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::nucleationModels::noNucleation</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::nucleationModels</namespace>
  </compound>
  <compound kind="file">
    <name>noPopulationBalance.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/noPopulationBalance/</path>
    <filename>a00192</filename>
    <includes id="a00193" name="noPopulationBalance.H" local="yes" imported="no">noPopulationBalance.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00257.html</anchorfile>
      <anchor>a737c1912e0e9ef9a0d6b674272e44d7f</anchor>
      <arglist>(noPopulationBalance, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00257.html</anchorfile>
      <anchor>aa4c3c326869bceb4f53d5175577d7c8c</anchor>
      <arglist>(populationBalanceModel, noPopulationBalance, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>noPopulationBalance.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/noPopulationBalance/</path>
    <filename>a00193</filename>
    <includes id="a00205" name="populationBalanceModel.H" local="yes" imported="no">populationBalanceModel.H</includes>
    <class kind="class">Foam::populationBalanceModels::noPopulationBalance</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceModels</namespace>
  </compound>
  <compound kind="file">
    <name>nucleationModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/nucleationModels/nucleationModel/</path>
    <filename>a00194</filename>
    <includes id="a00195" name="nucleationModel.H" local="yes" imported="no">nucleationModel.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>af6421a75bd0356deacdd72271b6f5e83</anchor>
      <arglist>(nucleationModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a0b6166697bbb54af81fb439a1105951e</anchor>
      <arglist>(nucleationModel, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nucleationModel.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/nucleationModels/nucleationModel/</path>
    <filename>a00195</filename>
    <includes id="a00164" name="moments.H" local="yes" imported="no">moments.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::nucleationModel</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
  </compound>
  <compound kind="file">
    <name>oneQuarterMassRatio.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/oneQuarterMassRatio/</path>
    <filename>a00196</filename>
    <includes id="a00197" name="oneQuarterMassRatio.H" local="yes" imported="no">oneQuarterMassRatio.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::daughterDistributions</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>af270c7f8972b4b7a65c62654f6a52ba8</anchor>
      <arglist>(oneQuarterMassRatio, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a402d029985d37241642222eff5412b57</anchor>
      <arglist>(daughterDistribution, oneQuarterMassRatio, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oneQuarterMassRatio.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/oneQuarterMassRatio/</path>
    <filename>a00197</filename>
    <includes id="a00102" name="daughterDistribution.H" local="yes" imported="no">daughterDistribution.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::daughterDistributions::oneQuarterMassRatio</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::daughterDistributions</namespace>
  </compound>
  <compound kind="file">
    <name>output.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/pbeFoam/</path>
    <filename>a00198</filename>
    <member kind="function">
      <type>runTime</type>
      <name>write</name>
      <anchorfile>a00198.html</anchorfile>
      <anchor>a8f30b3c2179b03a7acf273e9dea43342</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>volScalarField</type>
      <name>moment0</name>
      <anchorfile>a00198.html</anchorfile>
      <anchor>a71d53d6ef9266108a5d094c1554b2792</anchor>
      <arglist>(mesh.lookupObject&lt; volScalarField &gt;(&quot;moment.0.populationBalance&quot;))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pbeFoam.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/pbeFoam/</path>
    <filename>a00199</filename>
    <includes id="a00205" name="populationBalanceModel.H" local="yes" imported="no">populationBalanceModel.H</includes>
    <includes id="a00100" name="createSingleCellMesh.H" local="yes" imported="no">createSingleCellMesh.H</includes>
    <includes id="a00098" name="pbeFoam/createFields.H" local="yes" imported="no">createFields.H</includes>
    <includes id="a00216" name="readControls.H" local="yes" imported="no">readControls.H</includes>
    <includes id="a00198" name="output.H" local="yes" imported="no">output.H</includes>
    <member kind="define">
      <type>#define</type>
      <name>CREATE_MESH</name>
      <anchorfile>a00199.html</anchorfile>
      <anchor>a07c78a20188b90f315ee4a949b2f1c52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_CONTROL</name>
      <anchorfile>a00199.html</anchorfile>
      <anchor>a8ceea990ae1560f66059e9c4b230be5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>a00199.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pbeTransportFoam.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/pbeTransportFoam/</path>
    <filename>a00200</filename>
    <includes id="a00205" name="populationBalanceModel.H" local="yes" imported="no">populationBalanceModel.H</includes>
    <includes id="a00099" name="pbeTransportFoam/createFields.H" local="yes" imported="no">createFields.H</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>a00200.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PDFTransportModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/PDFTransportModels/PDFTransportModel/</path>
    <filename>a00201</filename>
    <includes id="a00202" name="PDFTransportModel.H" local="yes" imported="no">PDFTransportModel.H</includes>
  </compound>
  <compound kind="file">
    <name>PDFTransportModel.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/PDFTransportModels/PDFTransportModel/</path>
    <filename>a00202</filename>
    <class kind="class">Foam::PDFTransportModel</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>pEqn.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/buoyantPbePimpleFoam/</path>
    <filename>a00203</filename>
    <member kind="function">
      <type>thermo</type>
      <name>rho</name>
      <anchorfile>a00203.html</anchorfile>
      <anchor>a4586f3949f258271620eb374532e2ac8</anchor>
      <arglist>()-</arglist>
    </member>
    <member kind="function">
      <type>volScalarField</type>
      <name>rAU</name>
      <anchorfile>a00203.html</anchorfile>
      <anchor>a4ae3ff6f0732a8a206a641d7ff2d9f7d</anchor>
      <arglist>(1.0/UEqn.A())</arglist>
    </member>
    <member kind="function">
      <type>surfaceScalarField</type>
      <name>rhorAUf</name>
      <anchorfile>a00203.html</anchorfile>
      <anchor>afd8c4e61a2e39cb5143264971d9c72b8</anchor>
      <arglist>(&quot;rhorAUf&quot;, fvc::interpolate(rho *rAU))</arglist>
    </member>
    <member kind="function">
      <type>volVectorField</type>
      <name>HbyA</name>
      <anchorfile>a00203.html</anchorfile>
      <anchor>a84b1887f789e3bce2e0381c047a98de9</anchor>
      <arglist>(constrainHbyA(rAU *UEqn.H(), U, p_rgh))</arglist>
    </member>
    <member kind="function">
      <type>surfaceScalarField</type>
      <name>phig</name>
      <anchorfile>a00203.html</anchorfile>
      <anchor>a556bb449d809ee40ca35cc2ee766b26d</anchor>
      <arglist>(-rhorAUf *ghf *fvc::snGrad(rho)*mesh.magSf())</arglist>
    </member>
    <member kind="function">
      <type>surfaceScalarField</type>
      <name>phiHbyA</name>
      <anchorfile>a00203.html</anchorfile>
      <anchor>aef792bafd9bea2bf7d0483270574a775</anchor>
      <arglist>(&quot;phiHbyA&quot;,(                                       fvc::flux(rho *HbyA)                               +rhorAUf *fvc::ddtCorr(rho, U, phi)                       )+phig)</arglist>
    </member>
    <member kind="function">
      <type>MRF</type>
      <name>makeRelative</name>
      <anchorfile>a00203.html</anchorfile>
      <anchor>a1091d12f90202cefb0487730316abd8c</anchor>
      <arglist>(fvc::interpolate(rho), phiHbyA)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>constrainPressure</name>
      <anchorfile>a00203.html</anchorfile>
      <anchor>a797aefb4095dcdddbfb2b67948fc3cbc</anchor>
      <arglist>(p_rgh, rho, U, phiHbyA, rhorAUf, MRF)</arglist>
    </member>
    <member kind="function">
      <type>fvScalarMatrix</type>
      <name>p_rghDDtEqn</name>
      <anchorfile>a00203.html</anchorfile>
      <anchor>aab86021ac402de18529ad363d829f1b3</anchor>
      <arglist>(fvc::ddt(rho)+psi *correction(fvm::ddt(p_rgh))+fvc::div(phiHbyA)==fvOptions(psi, p_rgh, rho.name()))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>while</name>
      <anchorfile>a00203.html</anchorfile>
      <anchor>ab13470e79e249d04c443bf59be9ff31d</anchor>
      <arglist>(pimple.correctNonOrthogonal())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>a00203.html</anchorfile>
      <anchor>a3a782599467f113a731d85df5c3b1e70</anchor>
      <arglist>(thermo.dpdt())</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>p</name>
      <anchorfile>a00203.html</anchorfile>
      <anchor>ac483f6ce851c9ecd9fb835ff7551737c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>populationBalanceModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceModel/</path>
    <filename>a00204</filename>
    <includes id="a00205" name="populationBalanceModel.H" local="yes" imported="no">populationBalanceModel.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a5f1f6bb41c55fd770d1a82b1a3f616d1</anchor>
      <arglist>(populationBalanceModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a658da731d19646486da4cad759632bb0</anchor>
      <arglist>(populationBalanceModel, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>populationBalanceModel.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceModel/</path>
    <filename>a00205</filename>
    <class kind="class">Foam::populationBalanceModel</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>powerLawBreakup.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/powerLawBreakup/</path>
    <filename>a00206</filename>
    <includes id="a00207" name="powerLawBreakup.H" local="yes" imported="no">powerLawBreakup.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::breakupKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>a8b60ada41289ba4c36eedcf1dca754ac</anchor>
      <arglist>(powerLawBreakup, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>aeff8d67156c89fed6ad177f01cb8321e</anchor>
      <arglist>(breakupKernel, powerLawBreakup, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>powerLawBreakup.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/breakupKernels/powerLawBreakup/</path>
    <filename>a00207</filename>
    <includes id="a00083" name="breakupKernel.H" local="yes" imported="no">breakupKernel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::breakupKernels::powerLawBreakup</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::breakupKernels</namespace>
  </compound>
  <compound kind="file">
    <name>quadratureApproximation.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/quadratureApproximation/</path>
    <filename>a00208</filename>
    <includes id="a00209" name="quadratureApproximation.H" local="yes" imported="no">quadratureApproximation.H</includes>
  </compound>
  <compound kind="file">
    <name>quadratureApproximation.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/quadratureApproximation/</path>
    <filename>a00209</filename>
    <includes id="a00121" name="fieldMomentInversion.H" local="yes" imported="no">fieldMomentInversion.H</includes>
    <class kind="class">Foam::quadratureApproximation</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>quadratureApproximationI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/quadratureApproximation/</path>
    <filename>a00210</filename>
  </compound>
  <compound kind="file">
    <name>quadratureApproximations.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/quadratureApproximation/</path>
    <filename>a00211</filename>
    <includes id="a00215" name="quadratureNodes.H" local="yes" imported="no">quadratureNodes.H</includes>
    <includes id="a00162" name="momentFieldSets.H" local="yes" imported="no">momentFieldSets.H</includes>
    <includes id="a00209" name="quadratureApproximation.H" local="yes" imported="no">quadratureApproximation.H</includes>
    <namespace>Foam</namespace>
    <member kind="typedef">
      <type>quadratureApproximation&lt; volUnivariateMomentFieldSet, volScalarNode &gt;</type>
      <name>univariateQuadratureApproximation</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a545e54cd8a5ad1ca2192158b263148c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>quadratureNode.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/quadratureNode/</path>
    <filename>a00212</filename>
    <includes id="a00213" name="quadratureNode.H" local="yes" imported="no">quadratureNode.H</includes>
  </compound>
  <compound kind="file">
    <name>quadratureNode.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/quadratureNode/</path>
    <filename>a00213</filename>
    <class kind="class">Foam::quadratureNode</class>
    <class kind="class">Foam::quadratureNode::iNew</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>quadratureNodeI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/quadratureNode/</path>
    <filename>a00214</filename>
  </compound>
  <compound kind="file">
    <name>quadratureNodes.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/quadratureNode/</path>
    <filename>a00215</filename>
    <includes id="a00213" name="quadratureNode.H" local="yes" imported="no">quadratureNode.H</includes>
    <namespace>Foam</namespace>
    <member kind="typedef">
      <type>quadratureNode&lt; volScalarField, volScalarField, volScalarField &gt;</type>
      <name>volScalarNode</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a498baa35a7b2a08cd1c0fe85a3017d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>quadratureNode&lt; surfaceScalarField, surfaceScalarField, surfaceScalarField &gt;</type>
      <name>surfaceScalarNode</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a6323e785fc36ba155e0699c02bd2eee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>quadratureNode&lt; volScalarField, volVectorField, volScalarField &gt;</type>
      <name>volVectorNode</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ab20da0475c2033aaf8cb1dea78031f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>quadratureNode&lt; surfaceScalarField, surfaceVectorField, surfaceScalarField &gt;</type>
      <name>surfaceVectorNode</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a286070562b5d656217b5e7eb79b35e02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>readControls.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/pbeFoam/</path>
    <filename>a00216</filename>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>a00216.html</anchorfile>
      <anchor>ad9044c3d1d0b8f3ed3e6b9b1f8dbb8cb</anchor>
      <arglist>(runTime.controlDict().lookupOrDefault(&quot;suppressSolverInfo&quot;, false))</arglist>
    </member>
    <member kind="function">
      <type>Switch</type>
      <name>adjustTimeStep</name>
      <anchorfile>a00216.html</anchorfile>
      <anchor>a116d20bd6aa9cc2b5fcf634e3c45bbd5</anchor>
      <arglist>(runTime.controlDict().lookup(&quot;adjustTimeStep&quot;))</arglist>
    </member>
    <member kind="function">
      <type>scalar</type>
      <name>maxDeltaT</name>
      <anchorfile>a00216.html</anchorfile>
      <anchor>a7c604fc34158f5108b7ee5d89b95b433</anchor>
      <arglist>(readScalar(runTime.controlDict().lookup(&quot;maxDeltaT&quot;)))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sumAggregation.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/sumAggregation/</path>
    <filename>a00217</filename>
    <includes id="a00218" name="sumAggregation.H" local="yes" imported="no">sumAggregation.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>ae400872a78a4a9234d740ae66c007114</anchor>
      <arglist>(sumAggregation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a60fb21d09528d9baad4a0d418f4b125f</anchor>
      <arglist>(aggregationKernel, sumAggregation, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sumAggregation.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/sumAggregation/</path>
    <filename>a00218</filename>
    <includes id="a00075" name="aggregationKernel.H" local="yes" imported="no">aggregationKernel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernels::sumAggregation</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
  </compound>
  <compound kind="file">
    <name>symmetricFragmentation.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/symmetricFragmentation/</path>
    <filename>a00219</filename>
    <includes id="a00220" name="symmetricFragmentation.H" local="yes" imported="no">symmetricFragmentation.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::daughterDistributions</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a62ad711d8fce03a652f1adeb2fcef84e</anchor>
      <arglist>(symmetricFragmentation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a4a0510d1798895036e2050367b333efc</anchor>
      <arglist>(daughterDistribution, symmetricFragmentation, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>symmetricFragmentation.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/symmetricFragmentation/</path>
    <filename>a00220</filename>
    <includes id="a00102" name="daughterDistribution.H" local="yes" imported="no">daughterDistribution.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::daughterDistributions::symmetricFragmentation</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::daughterDistributions</namespace>
  </compound>
  <compound kind="file">
    <name>turbulentBrownian.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/turbulentBrownian/</path>
    <filename>a00221</filename>
    <includes id="a00222" name="turbulentBrownian.H" local="yes" imported="no">turbulentBrownian.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a8aea8aa81c72d6cc9339bc773860a063</anchor>
      <arglist>(turbulentBrownian, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a4425f03c0f3a6b57d979366a338cda40</anchor>
      <arglist>(aggregationKernel, turbulentBrownian, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>turbulentBrownian.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/aggregationKernels/turbulentBrownian/</path>
    <filename>a00222</filename>
    <includes id="a00075" name="aggregationKernel.H" local="yes" imported="no">aggregationKernel.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernels::turbulentBrownian</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
  </compound>
  <compound kind="file">
    <name>mixingModels/mixingSubModels/diffusionModels/turbulentDiffusion/turbulentDiffusion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/diffusionModels/turbulentDiffusion/</path>
    <filename>a00223</filename>
    <includes id="a00225" name="mixingModels/mixingSubModels/diffusionModels/turbulentDiffusion/turbulentDiffusion.H" local="yes" imported="no">turbulentDiffusion.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <namespace>Foam::mixingSubModels::diffusionModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00252.html</anchorfile>
      <anchor>a63731383ea80126b6cf10aaf15679fc9</anchor>
      <arglist>(turbulentDiffusion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00252.html</anchorfile>
      <anchor>a97d2209e8102de7cf85a3dc3192735b9</anchor>
      <arglist>(diffusionModel, turbulentDiffusion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>populationBalanceModels/populationBalanceSubModels/diffusionModels/turbulentDiffusion/turbulentDiffusion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/diffusionModels/turbulentDiffusion/</path>
    <filename>a00224</filename>
    <includes id="a00226" name="populationBalanceModels/populationBalanceSubModels/diffusionModels/turbulentDiffusion/turbulentDiffusion.H" local="yes" imported="no">turbulentDiffusion.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::diffusionModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00262.html</anchorfile>
      <anchor>afdc594891515141ee07b11edd796180c</anchor>
      <arglist>(turbulentDiffusion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00262.html</anchorfile>
      <anchor>a5735ce97238b71965eb6a6817765ae13</anchor>
      <arglist>(diffusionModel, turbulentDiffusion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mixingModels/mixingSubModels/diffusionModels/turbulentDiffusion/turbulentDiffusion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/mixingSubModels/diffusionModels/turbulentDiffusion/</path>
    <filename>a00225</filename>
    <class kind="class">Foam::mixingSubModels::diffusionModels::turbulentDiffusion</class>
    <namespace>Foam</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <namespace>Foam::mixingSubModels::diffusionModels</namespace>
  </compound>
  <compound kind="file">
    <name>populationBalanceModels/populationBalanceSubModels/diffusionModels/turbulentDiffusion/turbulentDiffusion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/diffusionModels/turbulentDiffusion/</path>
    <filename>a00226</filename>
    <class kind="class">Foam::populationBalanceSubModels::diffusionModels::turbulentDiffusion</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::diffusionModels</namespace>
  </compound>
  <compound kind="file">
    <name>turbulentMixing.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/turbulentMixing/</path>
    <filename>a00227</filename>
    <includes id="a00228" name="turbulentMixing.H" local="yes" imported="no">turbulentMixing.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::PDFTransportModels</namespace>
    <namespace>Foam::PDFTransportModels::mixingModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00255.html</anchorfile>
      <anchor>a3a551541939d8bbcf9fdc374ce4ede08</anchor>
      <arglist>(turbulentMixing, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00255.html</anchorfile>
      <anchor>a5bb611098ff24fdd12820b81036f0c9d</anchor>
      <arglist>(mixingModel, turbulentMixing, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>turbulentMixing.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/mixingModels/turbulentMixing/</path>
    <filename>a00228</filename>
    <includes id="a00242" name="univariatePDFTransportModel.H" local="yes" imported="no">univariatePDFTransportModel.H</includes>
    <includes id="a00151" name="mixingModel.H" local="yes" imported="no">mixingModel.H</includes>
    <includes id="a00149" name="mixingKernel.H" local="yes" imported="no">mixingKernel.H</includes>
    <class kind="class">Foam::PDFTransportModels::mixingModels::turbulentMixing</class>
    <namespace>Foam</namespace>
    <namespace>Foam::PDFTransportModels</namespace>
    <namespace>Foam::PDFTransportModels::mixingModels</namespace>
  </compound>
  <compound kind="file">
    <name>UEqn.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/applications/buoyantPbePimpleFoam/</path>
    <filename>a00229</filename>
    <member kind="function">
      <type>MRF</type>
      <name>correctBoundaryVelocity</name>
      <anchorfile>a00229.html</anchorfile>
      <anchor>a3d8a3fae539731d0068343d8b35d062c</anchor>
      <arglist>(U)</arglist>
    </member>
    <member kind="function">
      <type>fvVectorMatrix</type>
      <name>UEqn</name>
      <anchorfile>a00229.html</anchorfile>
      <anchor>aca6be8f7ed14e8582a0811cfe8a2d205</anchor>
      <arglist>(fvm::ddt(rho, U)+fvm::div(phi, U)+MRF.DDt(rho, U)+turbulence-&gt;divDevRhoReff(U)==fvOptions(rho, U))</arglist>
    </member>
    <member kind="function">
      <type>UEqn</type>
      <name>relax</name>
      <anchorfile>a00229.html</anchorfile>
      <anchor>a9a717d2a556132c73a6bb389a9de48bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>fvOptions</type>
      <name>constrain</name>
      <anchorfile>a00229.html</anchorfile>
      <anchor>ad9a6816dbc9c62129d40af3784545b31</anchor>
      <arglist>(UEqn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>a00229.html</anchorfile>
      <anchor>a5340a84918449f06669e13812b90f046</anchor>
      <arglist>(pimple.momentumPredictor())</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>uniform.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/uniform/</path>
    <filename>a00230</filename>
    <includes id="a00231" name="uniform.H" local="yes" imported="no">uniform.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::daughterDistributions</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a6cfc6fde57688830e91aa5900a2a3b0b</anchor>
      <arglist>(uniform, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>ad4645290635a7726786f906917fa5138</anchor>
      <arglist>(daughterDistribution, uniform, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>uniform.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/populationBalanceSubModels/daugtherDistributions/uniform/</path>
    <filename>a00231</filename>
    <includes id="a00102" name="daughterDistribution.H" local="yes" imported="no">daughterDistribution.H</includes>
    <class kind="class">Foam::populationBalanceSubModels::daughterDistributions::uniform</class>
    <namespace>Foam</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <namespace>Foam::populationBalanceSubModels::daughterDistributions</namespace>
  </compound>
  <compound kind="file">
    <name>univariateMomentAdvection.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentAdvection/univariateMomentAdvection/</path>
    <filename>a00232</filename>
    <includes id="a00233" name="univariateMomentAdvection.H" local="yes" imported="no">univariateMomentAdvection.H</includes>
  </compound>
  <compound kind="file">
    <name>univariateMomentAdvection.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentAdvection/univariateMomentAdvection/</path>
    <filename>a00233</filename>
    <includes id="a00215" name="quadratureNodes.H" local="yes" imported="no">quadratureNodes.H</includes>
    <includes id="a00162" name="momentFieldSets.H" local="yes" imported="no">momentFieldSets.H</includes>
    <includes id="a00079" name="basicFieldMomentInversion.H" local="yes" imported="no">basicFieldMomentInversion.H</includes>
    <includes id="a00211" name="quadratureApproximations.H" local="yes" imported="no">quadratureApproximations.H</includes>
    <includes id="a00234" name="univariateMomentAdvectionI.H" local="yes" imported="no">univariateMomentAdvectionI.H</includes>
    <class kind="class">Foam::univariateMomentAdvection</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>univariateMomentAdvectionI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentAdvection/univariateMomentAdvection/</path>
    <filename>a00234</filename>
  </compound>
  <compound kind="file">
    <name>univariateMomentInversion.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/basic/univariateMomentInversion/</path>
    <filename>a00235</filename>
    <includes id="a00236" name="univariateMomentInversion.H" local="yes" imported="no">univariateMomentInversion.H</includes>
    <includes id="a00111" name="eigenSolver.H" local="yes" imported="no">eigenSolver.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a2bfa8c5752536cc7ec9c8af1ba407aef</anchor>
      <arglist>(univariateMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a986535dad0b0c7383cd3f0370fa94d7e</anchor>
      <arglist>(univariateMomentInversion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>univariateMomentInversion.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/basic/univariateMomentInversion/</path>
    <filename>a00236</filename>
    <includes id="a00239" name="univariateMomentSet.H" local="yes" imported="no">univariateMomentSet.H</includes>
    <includes id="a00237" name="univariateMomentInversionI.H" local="yes" imported="no">univariateMomentInversionI.H</includes>
    <class kind="class">Foam::univariateMomentInversion</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>univariateMomentInversionI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentInversion/univariate/basic/univariateMomentInversion/</path>
    <filename>a00237</filename>
  </compound>
  <compound kind="file">
    <name>univariateMomentSet.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentSets/univariateMomentSet/</path>
    <filename>a00238</filename>
    <includes id="a00239" name="univariateMomentSet.H" local="yes" imported="no">univariateMomentSet.H</includes>
  </compound>
  <compound kind="file">
    <name>univariateMomentSet.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentSets/univariateMomentSet/</path>
    <filename>a00239</filename>
    <includes id="a00166" name="momentSet.H" local="yes" imported="no">momentSet.H</includes>
    <includes id="a00240" name="univariateMomentSetI.H" local="yes" imported="no">univariateMomentSetI.H</includes>
    <class kind="class">Foam::univariateMomentSet</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>univariateMomentSetI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/momentSets/univariateMomentSet/</path>
    <filename>a00240</filename>
  </compound>
  <compound kind="file">
    <name>univariatePDFTransportModel.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/PDFTransportModels/univariatePDFTransportModel/</path>
    <filename>a00241</filename>
    <includes id="a00242" name="univariatePDFTransportModel.H" local="yes" imported="no">univariatePDFTransportModel.H</includes>
  </compound>
  <compound kind="file">
    <name>univariatePDFTransportModel.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/PDFTransportModels/univariatePDFTransportModel/</path>
    <filename>a00242</filename>
    <includes id="a00202" name="PDFTransportModel.H" local="yes" imported="no">PDFTransportModel.H</includes>
    <includes id="a00211" name="quadratureApproximations.H" local="yes" imported="no">quadratureApproximations.H</includes>
    <includes id="a00233" name="univariateMomentAdvection.H" local="yes" imported="no">univariateMomentAdvection.H</includes>
    <includes id="a00243" name="univariatePDFTransportModelI.H" local="yes" imported="no">univariatePDFTransportModelI.H</includes>
    <class kind="class">Foam::PDFTransportModels::univariatePDFTransportModel</class>
    <namespace>Foam</namespace>
    <namespace>Foam::PDFTransportModels</namespace>
  </compound>
  <compound kind="file">
    <name>univariatePDFTransportModelI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/PDFTransportModels/univariatePDFTransportModel/</path>
    <filename>a00243</filename>
  </compound>
  <compound kind="file">
    <name>univariatePopulationBalance.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/univariatePopulationBalance/</path>
    <filename>a00244</filename>
    <includes id="a00245" name="univariatePopulationBalance.H" local="yes" imported="no">univariatePopulationBalance.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::PDFTransportModels</namespace>
    <namespace>Foam::PDFTransportModels::populationBalanceModels</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00256.html</anchorfile>
      <anchor>a141d32d1d596c5abf5a48966fb726556</anchor>
      <arglist>(univariatePopulationBalance, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00256.html</anchorfile>
      <anchor>a908eacb72c5c2b3af99129191b55dc5f</anchor>
      <arglist>(populationBalanceModel, univariatePopulationBalance, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>univariatePopulationBalance.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/quadratureMethods/populationBalanceModels/univariatePopulationBalance/</path>
    <filename>a00245</filename>
    <includes id="a00242" name="univariatePDFTransportModel.H" local="yes" imported="no">univariatePDFTransportModel.H</includes>
    <includes id="a00205" name="populationBalanceModel.H" local="yes" imported="no">populationBalanceModel.H</includes>
    <includes id="a00075" name="aggregationKernel.H" local="yes" imported="no">aggregationKernel.H</includes>
    <includes id="a00083" name="breakupKernel.H" local="yes" imported="no">breakupKernel.H</includes>
    <includes id="a00102" name="daughterDistribution.H" local="yes" imported="no">daughterDistribution.H</includes>
    <includes id="a00136" name="growthModel.H" local="yes" imported="no">growthModel.H</includes>
    <includes id="a00195" name="nucleationModel.H" local="yes" imported="no">nucleationModel.H</includes>
    <class kind="class">Foam::PDFTransportModels::populationBalanceModels::univariatePopulationBalance</class>
    <namespace>Foam</namespace>
    <namespace>Foam::PDFTransportModels</namespace>
    <namespace>Foam::PDFTransportModels::populationBalanceModels</namespace>
  </compound>
  <compound kind="file">
    <name>Vandermonde.C</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/Vandermonde/</path>
    <filename>a00246</filename>
    <includes id="a00247" name="Vandermonde.H" local="yes" imported="no">Vandermonde.H</includes>
  </compound>
  <compound kind="file">
    <name>Vandermonde.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/Vandermonde/</path>
    <filename>a00247</filename>
    <includes id="a00248" name="VandermondeI.H" local="yes" imported="no">VandermondeI.H</includes>
    <class kind="class">Foam::Vandermonde</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>VandermondeI.H</name>
    <path>/home/alberto/Desktop/OpenQBMM/src/Vandermonde/</path>
    <filename>a00248</filename>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::aggregationKernel</name>
    <filename>a00002.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00002.html</anchorfile>
      <anchor>ae635445d544ded93442f8f985f515459</anchor>
      <arglist>(&quot;aggregationKernel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00002.html</anchorfile>
      <anchor>adb6c85ea440716007e16e43747e20a7c</anchor>
      <arglist>(autoPtr, aggregationKernel, dictionary,(                                       const dictionary &amp;dict,                                       const fvMesh &amp;mesh                       ),(dict, mesh))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>aggregationKernel</name>
      <anchorfile>a00002.html</anchorfile>
      <anchor>a62c9e0113594b969e61c76e071b7a79b</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~aggregationKernel</name>
      <anchorfile>a00002.html</anchorfile>
      <anchor>ad207fdb33ae3b991ec3e94068c03a307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual scalar</type>
      <name>Ka</name>
      <anchorfile>a00002.html</anchorfile>
      <anchor>a46a8f0d3e7dd0bddc15c4e1a3deaf08e</anchor>
      <arglist>(const scalar &amp;abscissa1, const scalar &amp;abscissa2, const label &amp;celli) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; aggregationKernel &gt;</type>
      <name>New</name>
      <anchorfile>a00002.html</anchorfile>
      <anchor>aa4fd05f8720fbd55876a9a023be94855</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>dict_</name>
      <anchorfile>a00002.html</anchorfile>
      <anchor>a892ddcb9cba6f50b0396cdb7bf1b4f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const fvMesh &amp;</type>
      <name>mesh_</name>
      <anchorfile>a00002.html</anchorfile>
      <anchor>a23edeeeecebcef11921a33dd5d990570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dimensionedScalar</type>
      <name>Ca_</name>
      <anchorfile>a00002.html</anchorfile>
      <anchor>a7547e6fb837b9ab15b147886567d8cf2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::breakupKernels::AyaziShamlou</name>
    <filename>a00003.html</filename>
    <base>Foam::populationBalanceSubModels::breakupKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00003.html</anchorfile>
      <anchor>ae412b250cff181374b985c3429d4bb6f</anchor>
      <arglist>(&quot;AyaziShamlou&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AyaziShamlou</name>
      <anchorfile>a00003.html</anchorfile>
      <anchor>a781a7506bbb61bec5f20cc157c852dac</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AyaziShamlou</name>
      <anchorfile>a00003.html</anchorfile>
      <anchor>adef82df48b1ab9571151c9ff6ce21c2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>Kb</name>
      <anchorfile>a00003.html</anchorfile>
      <anchor>a1e8a125530058d3c06bc7ca11c10c1e2</anchor>
      <arglist>(const scalar &amp;abscissa, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::basicFieldMomentInversion</name>
    <filename>a00004.html</filename>
    <base>Foam::fieldMomentInversion</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00004.html</anchorfile>
      <anchor>a16c7e2969d7f2346945d833b832e6aab</anchor>
      <arglist>(&quot;basicFieldMomentInversion&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basicFieldMomentInversion</name>
      <anchorfile>a00004.html</anchorfile>
      <anchor>a520ff2f8fe8c29d2c448ecf910df1f99</anchor>
      <arglist>(const dictionary &amp;dict, const label nMoments, const label nSecondaryNodes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basicFieldMomentInversion</name>
      <anchorfile>a00004.html</anchorfile>
      <anchor>a4c8055bf05bb6465ec815251cdfa03e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invert</name>
      <anchorfile>a00004.html</anchorfile>
      <anchor>a81fbc0b024ab994e1e665273b7b7268b</anchor>
      <arglist>(const volUnivariateMomentFieldSet &amp;moments, PtrList&lt; volScalarNode &gt; &amp;nodes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invertBoundaryMoments</name>
      <anchorfile>a00004.html</anchorfile>
      <anchor>a0db254ceb34e9343bebd658750f9312d</anchor>
      <arglist>(const volUnivariateMomentFieldSet &amp;moments, PtrList&lt; volScalarNode &gt; &amp;nodes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invertLocalMoments</name>
      <anchorfile>a00004.html</anchorfile>
      <anchor>ae61ce7f3d511855a1d0eaf25c94d648f</anchor>
      <arglist>(const volUnivariateMomentFieldSet &amp;moments, PtrList&lt; volScalarNode &gt; &amp;nodes, const label celli, const bool fatalErrorOnFailedRealizabilityTest=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::betaEQMOM</name>
    <filename>a00005.html</filename>
    <base>Foam::extendedMomentInversion</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>a352af176e65dc7b012299c16c31a38b3</anchor>
      <arglist>(&quot;beta&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>betaEQMOM</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>adf5c9d013afeed0207b5030f2de12c28</anchor>
      <arglist>(const dictionary &amp;dict, const label nMoments, const label nSecondaryNodes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~betaEQMOM</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>a493e12f42c3d28984ef116da6b21ad73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>secondaryAbscissa</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>a872602e3d9bce4c696be2c2684a05e5a</anchor>
      <arglist>(scalar primaryAbscissa, scalar secondaryAbscissa, scalar sigma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>momentsStarToMoments</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>a1eb2822d55fbaa8060321a24fc197329</anchor>
      <arglist>(scalar sigma, univariateMomentSet &amp;moments, const univariateMomentSet &amp;momentsStar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>momentsToMomentsStar</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>a88e521ae957743da06eec8e0ab777e2e</anchor>
      <arglist>(scalar sigma, const univariateMomentSet &amp;moments, univariateMomentSet &amp;momentsStar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>m2N</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>abee7f03ce3d0afa1dbc462ff6da2fff9</anchor>
      <arglist>(scalar sigma, const univariateMomentSet &amp;momentsStar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recurrenceRelation</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>a5831aae7a1d440271b5184f59f912503</anchor>
      <arglist>(scalarList &amp;a, scalarList &amp;b, scalar primaryAbscissa, scalar sigma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>sigmaMax</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>a479ec71576844909c5c0756350c24e2f</anchor>
      <arglist>(univariateMomentSet &amp;moments)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::breakupKernel</name>
    <filename>a00006.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>ad27ab1fecde3f5a152854fe04213389e</anchor>
      <arglist>(&quot;breakupKernel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a7611eb0558e7d05a664e8b2239b218c2</anchor>
      <arglist>(autoPtr, breakupKernel, dictionary,(                                       const dictionary &amp;dict,                                       const fvMesh &amp;mesh                       ),(dict, mesh))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>breakupKernel</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a291975a4184ffb81c78ae7a7dfb85921</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~breakupKernel</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a2dcf50d8d0b3c8a783c5efb6e41c30c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual scalar</type>
      <name>Kb</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>aa5de66d90e7d78ea8a00a3bdf2bab7ab</anchor>
      <arglist>(const scalar &amp;abscissa, const label &amp;celli) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; breakupKernel &gt;</type>
      <name>New</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>ab499b2327814c15e167416a75c06fd61</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>dict_</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a892ddcb9cba6f50b0396cdb7bf1b4f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const fvMesh &amp;</type>
      <name>mesh_</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a23edeeeecebcef11921a33dd5d990570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dimensionedScalar</type>
      <name>Cb_</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a3c52b9b797dfa899208f7b7a68d0fadb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::aggregationKernels::Brownian</name>
    <filename>a00007.html</filename>
    <base>Foam::populationBalanceSubModels::aggregationKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ab79c0cace563122099e6ab3516ef4f1f</anchor>
      <arglist>(&quot;Brownian&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Brownian</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>abd4a2157ea96052400820ceafb702b91</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Brownian</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a1494ac836158c04e01bf0d61faab3e0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>Ka</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>aff545f8602677e85abbb1b6c6d0fb20f</anchor>
      <arglist>(const scalar &amp;abscissa1, const scalar &amp;abscissa2, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::conditionalMomentInversion</name>
    <filename>a00008.html</filename>
    <member kind="function">
      <type></type>
      <name>conditionalMomentInversion</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>aea8708169fa153ae734bde9a7be848e0</anchor>
      <arglist>(const dictionary &amp;dict, const label nMoments, const Map&lt; label &gt; map, const labelList &amp;nNodes, const List&lt; word &gt; &amp;support)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~conditionalMomentInversion</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a58b463b7150f954828f65cb99d9f7ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invert</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a8d1ea4c567d75c1d1fc0b882a5c4ac29</anchor>
      <arglist>(const nDimensionalMappedList&lt; scalar &gt; &amp;moments)</arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nMoments</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>ac1e97a89c526e32fc5ef143d6bcef361</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const labelList &amp;</type>
      <name>nNodes</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>af0c9dfde6f2aa1caa3d94853d6fd7fa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PtrList&lt; nDimensionalMappedList&lt; scalar &gt; &gt; &amp;</type>
      <name>weights</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a74dc9a46ed55bdd3419033108410c0fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PtrList&lt; nDimensionalMappedList&lt; scalar &gt; &gt; &amp;</type>
      <name>abscissae</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a82e42b64483b51fcf767d9709206c1ef</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::aggregationKernels::constantAggregation</name>
    <filename>a00009.html</filename>
    <base>Foam::populationBalanceSubModels::aggregationKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>ac2a86ba46d157b053e4a28a9483a48f5</anchor>
      <arglist>(&quot;constant&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>constantAggregation</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a3d9eab6d02320111723f0725a2ef06fd</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~constantAggregation</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a8f95da283d65bcd70fad3f015ff2dfd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>Ka</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>aff545f8602677e85abbb1b6c6d0fb20f</anchor>
      <arglist>(const scalar &amp;abscissa1, const scalar &amp;abscissa2, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::breakupKernels::constantBreakup</name>
    <filename>a00010.html</filename>
    <base>Foam::populationBalanceSubModels::breakupKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>ac2a86ba46d157b053e4a28a9483a48f5</anchor>
      <arglist>(&quot;constant&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>constantBreakup</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a0a870758489c808541712fef4848004a</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~constantBreakup</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a4301ded8dfbbd776391943d59b7fdb28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>Kb</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a1e8a125530058d3c06bc7ca11c10c1e2</anchor>
      <arglist>(const scalar &amp;abscissa, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::growthModels::constantGrowth</name>
    <filename>a00011.html</filename>
    <base>Foam::populationBalanceSubModels::growthModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ac2a86ba46d157b053e4a28a9483a48f5</anchor>
      <arglist>(&quot;constant&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>constantGrowth</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a41f1e1e078c35159653a11c684be29b0</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~constantGrowth</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>af00385dc3e6aa76de6adb4cff11350b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>Kg</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a9949ef95294d428e299b22c78783df34</anchor>
      <arglist>(const scalar &amp;abscissa) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::daughterDistribution</name>
    <filename>a00012.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a82911bf276379ac9d1978f3e59b5a2da</anchor>
      <arglist>(&quot;daughterDistribution&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a233d1b6be37d99eb2ef9e3f3431d6e18</anchor>
      <arglist>(autoPtr, daughterDistribution, dictionary,(                                       const dictionary &amp;dict                       ),(dict))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>daughterDistribution</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a24ef98904209a2fdb76d456f36fb7433</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~daughterDistribution</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a82d94b9042834125e095b863b9b1d2b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual scalar</type>
      <name>mD</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>af9150e5e771caf94839759d56d04e458</anchor>
      <arglist>(const label &amp;order, const scalar &amp;abscissa) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; daughterDistribution &gt;</type>
      <name>New</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>aae6ec3b92070a02ab63d7193760e4cb4</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>dict_</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a892ddcb9cba6f50b0396cdb7bf1b4f6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::aggregationKernels::differentialForceAggregation</name>
    <filename>a00013.html</filename>
    <base>Foam::populationBalanceSubModels::aggregationKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a36b4b16775fb11ddc9dc3aa051f015d1</anchor>
      <arglist>(&quot;differentialForce&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>differentialForceAggregation</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a05c80bd86eb232b2d727b7a7d6656e7e</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~differentialForceAggregation</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>ab500dc560ba25bcea373d41739d6429b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>Ka</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>aff545f8602677e85abbb1b6c6d0fb20f</anchor>
      <arglist>(const scalar &amp;abscissa1, const scalar &amp;abscissa2, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::mixingSubModels::diffusionModel</name>
    <filename>a00014.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>aac5e53b16b5d306f767a3ac9c82018fe</anchor>
      <arglist>(&quot;diffusionModel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>aa29c65576a34ab15da2f135cfb51cd12</anchor>
      <arglist>(autoPtr, diffusionModel, dictionary,(                                       const dictionary &amp;dict                       ),(dict))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>diffusionModel</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a9ddf42daebca521ed9b1836083a7c90a</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~diffusionModel</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>af2348e708346160fd55cb63f0a48dfa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>momentDiff</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a5b7c21e0d26e0f2c3f207a1a6929fd6d</anchor>
      <arglist>(const volScalarField &amp;moment) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; diffusionModel &gt;</type>
      <name>New</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a9f9abf14e0f01fcbeb8b64ab565b8df5</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>dict_</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a892ddcb9cba6f50b0396cdb7bf1b4f6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::diffusionModel</name>
    <filename>a00015.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aac5e53b16b5d306f767a3ac9c82018fe</anchor>
      <arglist>(&quot;diffusionModel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aa29c65576a34ab15da2f135cfb51cd12</anchor>
      <arglist>(autoPtr, diffusionModel, dictionary,(                                       const dictionary &amp;dict                       ),(dict))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>diffusionModel</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a9ddf42daebca521ed9b1836083a7c90a</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~diffusionModel</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>af2348e708346160fd55cb63f0a48dfa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>momentDiff</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a5b7c21e0d26e0f2c3f207a1a6929fd6d</anchor>
      <arglist>(const volScalarField &amp;moment) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; diffusionModel &gt;</type>
      <name>New</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a4979734dfbad3055a0ebcb03224a6cf3</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>dict_</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a892ddcb9cba6f50b0396cdb7bf1b4f6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::eigenSolver</name>
    <filename>a00016.html</filename>
    <member kind="function">
      <type></type>
      <name>eigenSolver</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>ade4e6ff9a67eb861e728ad561d045027</anchor>
      <arglist>(const scalarSquareMatrix &amp;A)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>eigenSolver</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>ac19d211d97c70922835cc795f9b2e242</anchor>
      <arglist>(const scalarSquareMatrix &amp;A, bool symmetric)</arglist>
    </member>
    <member kind="function">
      <type>const scalarDiagonalMatrix &amp;</type>
      <name>eigenvaluesRe</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a8927d2839df055d2e92763015985af22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const scalarDiagonalMatrix &amp;</type>
      <name>eigenvaluesIm</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a39526476f323610e9a66b3aa5a68d5b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const scalarSquareMatrix &amp;</type>
      <name>eigenvectors</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a9585ad0ceb154d3f6bacd468376aa1df</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::daughterDistributions::erosion</name>
    <filename>a00017.html</filename>
    <base>Foam::populationBalanceSubModels::daughterDistribution</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a62fb9ef190a5ffc161db6206dc8268c2</anchor>
      <arglist>(&quot;erosion&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>erosion</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a2b3867c760b6b4b9aa9d9498e244db7b</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~erosion</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a6dba80760a678d33471f4e4b6cd26a60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>mD</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>af11d63388088dc9b381b450559526d24</anchor>
      <arglist>(const label &amp;order, const scalar &amp;abscissa) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::breakupKernels::exponentialBreakup</name>
    <filename>a00018.html</filename>
    <base>Foam::populationBalanceSubModels::breakupKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a86ff92ca0beb621157b91eba8601746d</anchor>
      <arglist>(&quot;exponential&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>exponentialBreakup</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>ab8c18aa51a2edf305a6043ff25a8e675</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~exponentialBreakup</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a3805c5cd8e532366720e40ab89e2d01d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>Kb</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a1e8a125530058d3c06bc7ca11c10c1e2</anchor>
      <arglist>(const scalar &amp;abscissa, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::extendedFieldMomentInversion</name>
    <filename>a00019.html</filename>
    <base>Foam::fieldMomentInversion</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a92d1d2c620a5376ba8e67121739b9a96</anchor>
      <arglist>(&quot;extendedFieldMomentInversion&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>extendedFieldMomentInversion</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a694ee9b046a29d6d51bce94e2d5f9193</anchor>
      <arglist>(const dictionary &amp;dict, const label nMoments, const label nSecondaryNodes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~extendedFieldMomentInversion</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>abcb2345daaefe093eab65b6cf91ad9c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invert</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a81fbc0b024ab994e1e665273b7b7268b</anchor>
      <arglist>(const volUnivariateMomentFieldSet &amp;moments, PtrList&lt; volScalarNode &gt; &amp;nodes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invertBoundaryMoments</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a0db254ceb34e9343bebd658750f9312d</anchor>
      <arglist>(const volUnivariateMomentFieldSet &amp;moments, PtrList&lt; volScalarNode &gt; &amp;nodes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invertLocalMoments</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>ae61ce7f3d511855a1d0eaf25c94d648f</anchor>
      <arglist>(const volUnivariateMomentFieldSet &amp;moments, PtrList&lt; volScalarNode &gt; &amp;nodes, const label celli, const bool fatalErrorOnFailedRealizabilityTest=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::extendedMomentInversion</name>
    <filename>a00020.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a3f90688f92c81e5818c2585b4451e43f</anchor>
      <arglist>(&quot;extendedMomentInversion&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a8dbf28bc47565126766861c118c2033f</anchor>
      <arglist>(autoPtr, extendedMomentInversion, dictionary,(                                                       const dictionary &amp;dict,                                                       const label nMoments,                                                       const label nSecondaryNodes                                       ),(dict, nMoments, nSecondaryNodes))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>extendedMomentInversion</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>afe89ce0884b636b5ace78d61605601af</anchor>
      <arglist>(const dictionary &amp;dict, const label nMoments, const label nSecondaryNodes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~extendedMomentInversion</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a37ce62f65b4f4630243d90f31e47d25a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invert</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a45d56bb3ba42ace7670d4c68707abf5d</anchor>
      <arglist>(const univariateMomentSet &amp;moments)</arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nMoments</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a16bc2a1c0649f9428b6d1a89efd4e9d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nPrimaryNodes</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>addb843076e1ddf5cc3c709baa73756ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nSecondaryNodes</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>af326f16b872f54341e6fd95a1e8414c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>scalar</type>
      <name>sigma</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a2b9edc54c3fe4f8d47922ad824da357c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const scalarList &amp;</type>
      <name>primaryWeights</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a8840f59fd6d9dd1f2154d81fe377c62b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const scalarList &amp;</type>
      <name>primaryAbscissae</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a9cfcee4e5ebf185d91120fb9fd2abe55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const scalarRectangularMatrix &amp;</type>
      <name>secondaryWeights</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a513b3ebae3591c362b1d8e967a5871dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const scalarRectangularMatrix &amp;</type>
      <name>secondaryAbscissae</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a6b8b0912e2ddfdec5e637320f64f6c2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; extendedMomentInversion &gt;</type>
      <name>New</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a404fcfd31812910b2629598402f2183d</anchor>
      <arglist>(const dictionary &amp;dict, const label nMoments, const label nSecondaryNodes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual scalar</type>
      <name>secondaryAbscissa</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>ad9ffbed9b29d5c51f202e690534149c6</anchor>
      <arglist>(scalar primaryAbscissa, scalar secondaryAbscissa, scalar sigma)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>momentsStarToMoments</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a6bdcc0b154191b3f68ade352d8f81786</anchor>
      <arglist>(scalar sigma, univariateMomentSet &amp;moments, const univariateMomentSet &amp;momentsStar)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>momentsToMomentsStar</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a45d093a1dba87ac5b3225bbec5cd48a3</anchor>
      <arglist>(scalar sigma, const univariateMomentSet &amp;moments, univariateMomentSet &amp;momentsStar)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual scalar</type>
      <name>m2N</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a05e365f57804aa13cd6bd279b552ea02</anchor>
      <arglist>(scalar sigma, const univariateMomentSet &amp;momentsStar)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>scalar</type>
      <name>normalizedMomentError</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a21b737ce5ace3ad03f53c403f8e33127</anchor>
      <arglist>(scalar sigma, const univariateMomentSet &amp;moments, univariateMomentSet &amp;momentsStar)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>recurrenceRelation</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>ad5f6b05480e05c31e0a50441261c3059</anchor>
      <arglist>(scalarList &amp;a, scalarList &amp;b, scalar primaryAbscissa, scalar sigma)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual scalar</type>
      <name>sigmaMax</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a2acee07bc2cc5f9cc51b0b4b2c98f943</anchor>
      <arglist>(univariateMomentSet &amp;moments)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>label</type>
      <name>nMoments_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a2241219aa524be91ffd4ded3f42f582a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>label</type>
      <name>nPrimaryNodes_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a4f67ff7835ca0a0649bd0fc7df50293f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>label</type>
      <name>nSecondaryNodes_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a40215782a1b76974e2398e5db8a42c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalarList</type>
      <name>primaryWeights_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>aedefe40f48ae03efde1bc63b09f905d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalarList</type>
      <name>primaryAbscissae_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>ab603db57b174dc650c896e4ad2c09c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalar</type>
      <name>sigma_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a60ad044da1c5c5863dc3999beaf9ded6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalarRectangularMatrix</type>
      <name>secondaryWeights_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a7ee069fff6b86877e0fea50151279f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalarRectangularMatrix</type>
      <name>secondaryAbscissae_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a7181a7bcc88b4461f73692d3cf68b217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalar</type>
      <name>minMean_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>ace8d3904a17ec917d2c13e4fc5589881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalar</type>
      <name>minVariance_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a34b2a8a03f3f44ac9346df9b0dab3fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>label</type>
      <name>maxSigmaIter_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>aa78ff36606add0e3786c315268651929</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalar</type>
      <name>momentsTol_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>ae7deec167ce9b1e5dd3ec8cb8763a920</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalar</type>
      <name>sigmaMin_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a75d8593d0b82f0767612d7fcdf64077f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalar</type>
      <name>sigmaTol_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>afac3a4fbf965a79a72058e61df5c748e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalar</type>
      <name>targetFunctionTol_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a650aa5cf90bbd6acdd545a79a5bbbede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>foundUnrealizableSigma_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>aeb806194434667ed8302ae914a218ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>nullSigma_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a321aaf5fa452c684bea8e78de313a5df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::fieldMomentInversion</name>
    <filename>a00021.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a78518bc7cbbbdd3e08d024a5776e9d2d</anchor>
      <arglist>(&quot;fieldMomentInversion&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>acc3d49bf06efee7e67b10d62808f0153</anchor>
      <arglist>(autoPtr, fieldMomentInversion, dictionary,(                                                       const dictionary &amp;dict,                                                       const label nMoments,                                                       const label nSecondaryNodes                                       ),(dict, nMoments, nSecondaryNodes))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fieldMomentInversion</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>ab0c968ddf570d99079f6013c38e6366a</anchor>
      <arglist>(const dictionary &amp;dict, const label nMoments, const label nSecondaryNodes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~fieldMomentInversion</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>ac9514bda7486d306d89ac080c6b48a52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invert</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>af1ce49a928b14da3dbc18b8c7a3b2061</anchor>
      <arglist>(const volUnivariateMomentFieldSet &amp;moments, PtrList&lt; volScalarNode &gt; &amp;nodes)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invertBoundaryMoments</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a6ab57be96e140a67b8f4762fc67c2a1b</anchor>
      <arglist>(const volUnivariateMomentFieldSet &amp;moments, PtrList&lt; volScalarNode &gt; &amp;nodes)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invertLocalMoments</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a07e40a68be917a3b4910abca074f30db</anchor>
      <arglist>(const volUnivariateMomentFieldSet &amp;moments, PtrList&lt; volScalarNode &gt; &amp;nodes, const label celli, const bool fatalErrorOnFailedRealizabilityTest=true)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extended</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>ab7b9ffa2fac0589fccaf727ecc4bf8ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; fieldMomentInversion &gt;</type>
      <name>New</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>aaa7a60bdf0d7425ae1a922520de47637</anchor>
      <arglist>(const dictionary &amp;dict, const label nMoments, const label nSecondaryNodes)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>extended_</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a4bb40947fbadb3a714e5e3beb2824193</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::mixingSubModels::mixingKernels::FokkerPlanck</name>
    <filename>a00022.html</filename>
    <base>Foam::mixingSubModels::mixingKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a744547cf1f8f8cab0775e6b41d928bda</anchor>
      <arglist>(&quot;FokkerPlanck&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FokkerPlanck</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a718fc89d155ab44ff0ceab5edaebae42</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FokkerPlanck</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a58e0c436828db3c5c2398eac07f00747</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>K</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>ac39375448f36ddee2cac96a50dd6a0a9</anchor>
      <arglist>(const volUnivariateMoment &amp;moment, const volUnivariateMomentFieldSet &amp;moments) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::daughterDistributions::fullFragmentation</name>
    <filename>a00023.html</filename>
    <base>Foam::populationBalanceSubModels::daughterDistribution</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a9605c41753d122821a153bb82d936e9c</anchor>
      <arglist>(&quot;fullFragmentation&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fullFragmentation</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>aa3c53b21095cacbcf34c500cc696a3fa</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~fullFragmentation</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>adb107a2c005595f4c614a4b15316b0e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>mD</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>af11d63388088dc9b381b450559526d24</anchor>
      <arglist>(const label &amp;order, const scalar &amp;abscissa) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::gammaEQMOM</name>
    <filename>a00024.html</filename>
    <base>Foam::extendedMomentInversion</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>afffec2f7f3e2436504686ee8fe86986f</anchor>
      <arglist>(&quot;gamma&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>gammaEQMOM</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a41e161473baf15e743b15c1570ae7fee</anchor>
      <arglist>(const dictionary &amp;dict, const label nMoments, const label nSecondaryNodes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~gammaEQMOM</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a89b0169394c5e2e3ed2587258b2f6b95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>secondaryAbscissa</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a872602e3d9bce4c696be2c2684a05e5a</anchor>
      <arglist>(scalar primaryAbscissa, scalar secondaryAbscissa, scalar sigma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>momentsStarToMoments</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a1eb2822d55fbaa8060321a24fc197329</anchor>
      <arglist>(scalar sigma, univariateMomentSet &amp;moments, const univariateMomentSet &amp;momentsStar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>momentsToMomentsStar</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a88e521ae957743da06eec8e0ab777e2e</anchor>
      <arglist>(scalar sigma, const univariateMomentSet &amp;moments, univariateMomentSet &amp;momentsStar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>m2N</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>abee7f03ce3d0afa1dbc462ff6da2fff9</anchor>
      <arglist>(scalar sigma, const univariateMomentSet &amp;momentsStar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recurrenceRelation</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a5831aae7a1d440271b5184f59f912503</anchor>
      <arglist>(scalarList &amp;a, scalarList &amp;b, scalar primaryAbscissa, scalar sigma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>sigmaMax</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a479ec71576844909c5c0756350c24e2f</anchor>
      <arglist>(univariateMomentSet &amp;moments)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::gaussLobattoMomentInversion</name>
    <filename>a00025.html</filename>
    <base>Foam::univariateMomentInversion</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a82afeb74ebccf942227542383440ade1</anchor>
      <arglist>(&quot;GaussLobatto&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>gaussLobattoMomentInversion</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a19f132e2fe6d20faf1a5a05768990c4b</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~gaussLobattoMomentInversion</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>ae6b87c401ec282458f44cea51931b47c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>correctRecurrence</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>adb8044c0e431e0fe1005a4395fff5478</anchor>
      <arglist>(univariateMomentSet &amp;moments, scalarList &amp;alpha, scalarList &amp;beta, const scalar minKnownAbscissa=0, const scalar maxKnownAbscissa=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcNQuadratureNodes</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>ae11f16abe217f76d4e7b5e98e47b3ae1</anchor>
      <arglist>(univariateMomentSet &amp;moments)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::gaussMomentInversion</name>
    <filename>a00026.html</filename>
    <base>Foam::univariateMomentInversion</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>ab64427407045477aab2eb45b9f9efe1e</anchor>
      <arglist>(&quot;Gauss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>gaussMomentInversion</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>ab84059e01757095681a772d0021f9aac</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~gaussMomentInversion</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a45dd9dc55811f1ddc792a320c2a283af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>correctRecurrence</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>adb8044c0e431e0fe1005a4395fff5478</anchor>
      <arglist>(univariateMomentSet &amp;moments, scalarList &amp;alpha, scalarList &amp;beta, const scalar minKnownAbscissa=0, const scalar maxKnownAbscissa=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcNQuadratureNodes</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>ae11f16abe217f76d4e7b5e98e47b3ae1</anchor>
      <arglist>(univariateMomentSet &amp;moments)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::gaussRadauMomentInversion</name>
    <filename>a00027.html</filename>
    <base>Foam::univariateMomentInversion</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>af30711ded5ffb0a9c4feae46a978cc98</anchor>
      <arglist>(&quot;GaussRadau&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>gaussRadauMomentInversion</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>aaa249ea77e932779c48df02a6ee4e382</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~gaussRadauMomentInversion</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a1c10e28cb0b50ad94bb183aa98afcf05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>correctRecurrence</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>adb8044c0e431e0fe1005a4395fff5478</anchor>
      <arglist>(univariateMomentSet &amp;moments, scalarList &amp;alpha, scalarList &amp;beta, const scalar minKnownAbscissa=0, const scalar maxKnownAbscissa=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcNQuadratureNodes</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>ae11f16abe217f76d4e7b5e98e47b3ae1</anchor>
      <arglist>(univariateMomentSet &amp;moments)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::growthModel</name>
    <filename>a00028.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>ab1ef5bca2c86ba9151614ebeaffed754</anchor>
      <arglist>(&quot;growthModel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>aa9d98df3c14edfe3a1ac5bbfb9e2b10b</anchor>
      <arglist>(autoPtr, growthModel, dictionary,(                                       const dictionary &amp;dict                       ),(dict))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>growthModel</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>aa383495cbbb616e5138b6b5ce8a2630b</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~growthModel</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a2cbcf75a5aa3c9f8e8b9d40904732c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual scalar</type>
      <name>Kg</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>ab7fb4ac29c00f426780bcdfebae822de</anchor>
      <arglist>(const scalar &amp;abscissa) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; growthModel &gt;</type>
      <name>New</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a7da088e2d1463d28793d9e080bf244a6</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>dict_</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a892ddcb9cba6f50b0396cdb7bf1b4f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dimensionedScalar</type>
      <name>Cg_</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a77eb6079970cf46157d09f0370132b38</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::aggregationKernels::hydrodynamicAggregation</name>
    <filename>a00029.html</filename>
    <base>Foam::populationBalanceSubModels::aggregationKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a40ce4cef678e15a0f33624e28b824edf</anchor>
      <arglist>(&quot;hydrodynamic&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hydrodynamicAggregation</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ac2d59e2e1b480844473b8c9e80544658</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~hydrodynamicAggregation</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aa892ea992f56afc113c78780d52f9d9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>Ka</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aff545f8602677e85abbb1b6c6d0fb20f</anchor>
      <arglist>(const scalar &amp;abscissa1, const scalar &amp;abscissa2, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::mixingSubModels::mixingKernels::IEM</name>
    <filename>a00030.html</filename>
    <base>Foam::mixingSubModels::mixingKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a1aa74a2a8e1a424bcbf1e400e8a4c504</anchor>
      <arglist>(&quot;IEM&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IEM</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a0889eb4694ebdfaf84d6835f64d09606</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IEM</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a997e52c6e4e36862421a083fced3f78b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>K</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ac39375448f36ddee2cac96a50dd6a0a9</anchor>
      <arglist>(const volUnivariateMoment &amp;moment, const volUnivariateMomentFieldSet &amp;moments) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::quadratureNode::iNew</name>
    <filename>a00031.html</filename>
    <member kind="function">
      <type></type>
      <name>iNew</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>add8e7db560379dd410d39d795968758a</anchor>
      <arglist>(const word &amp;distributionName, const fvMesh &amp;mesh, const dimensionSet &amp;weightDimensions, const dimensionSet &amp;abscissaDimensions, const wordList &amp;boundaryTypes, const bool extended, const label nSecondaryNodes)</arglist>
    </member>
    <member kind="function">
      <type>autoPtr&lt; quadratureNode&lt; weightType, abscissaType, sigmaType &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a7cf4b421db9b97300525a415cbae6d2c</anchor>
      <arglist>(Istream &amp;is) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::moment::iNew</name>
    <filename>a00032.html</filename>
    <member kind="function">
      <type></type>
      <name>iNew</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a0378f00790de3521807ef30a7b9cd294</anchor>
      <arglist>(const word &amp;distributionName, const fvMesh &amp;mesh, const autoPtr&lt; PtrList&lt; nodeType &gt;&gt; &amp;nodes)</arglist>
    </member>
    <member kind="function">
      <type>autoPtr&lt; moment&lt; fieldType, nodeType &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a70e096bade6ebcd0162ee21bb0c74507</anchor>
      <arglist>(Istream &amp;is) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::lognormalEQMOM</name>
    <filename>a00033.html</filename>
    <base>Foam::extendedMomentInversion</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a3a34900882fe6c779674da9f3acabe2b</anchor>
      <arglist>(&quot;lognormal&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>lognormalEQMOM</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a041c92a009ff5d815d4114f739c90671</anchor>
      <arglist>(const dictionary &amp;dict, const label nMoments, const label nSecondaryNodes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~lognormalEQMOM</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a5eae814d9bdd2c784867bb2fbd1fbb58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>secondaryAbscissa</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a872602e3d9bce4c696be2c2684a05e5a</anchor>
      <arglist>(scalar primaryAbscissa, scalar secondaryAbscissa, scalar sigma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>momentsStarToMoments</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a1eb2822d55fbaa8060321a24fc197329</anchor>
      <arglist>(scalar sigma, univariateMomentSet &amp;moments, const univariateMomentSet &amp;momentsStar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>momentsToMomentsStar</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a88e521ae957743da06eec8e0ab777e2e</anchor>
      <arglist>(scalar sigma, const univariateMomentSet &amp;moments, univariateMomentSet &amp;momentsStar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>m2N</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>abee7f03ce3d0afa1dbc462ff6da2fff9</anchor>
      <arglist>(scalar sigma, const univariateMomentSet &amp;momentsStar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recurrenceRelation</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a5831aae7a1d440271b5184f59f912503</anchor>
      <arglist>(scalarList &amp;a, scalarList &amp;b, scalar primaryAbscissa, scalar sigma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>sigmaMax</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a479ec71576844909c5c0756350c24e2f</anchor>
      <arglist>(univariateMomentSet &amp;moments)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::breakupKernels::LuoSvendsen</name>
    <filename>a00034.html</filename>
    <base>Foam::populationBalanceSubModels::breakupKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a7dabdef9e0dba98649b68dc7314a15f8</anchor>
      <arglist>(&quot;LuoSvendsen&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LuoSvendsen</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a54c8cbfbadc65214ec3705add2cfbab6</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LuoSvendsen</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a4550d3c84edbc1ad0d8f8a6701300eeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>Kb</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a1e8a125530058d3c06bc7ca11c10c1e2</anchor>
      <arglist>(const scalar &amp;abscissa, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::nucleationModels::Miller</name>
    <filename>a00035.html</filename>
    <base>Foam::populationBalanceSubModels::nucleationModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a0b7ab5f6ffe81765ac026923f92189f7</anchor>
      <arglist>(&quot;Miller&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Miller</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a297db0a313fc404c8e65799a33e7767f</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Miller</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>afbcb41cd463fa394fe864ac5179ef537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>nucleationSource</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a1a1beb8cf7e0221ebba90ce5aa341f59</anchor>
      <arglist>(const label &amp;momentOrder, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::mixingSubModels::mixingKernel</name>
    <filename>a00036.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a3b42ca04bac2225aebf334ca0d1930d3</anchor>
      <arglist>(&quot;mixingKernel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>aae2fd47362b83e744693764fac06c525</anchor>
      <arglist>(autoPtr, mixingKernel, dictionary,(                                       const dictionary &amp;dict                       ),(dict))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mixingKernel</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>aaca5d9c330f9d405dbba4c0a005e67b2</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~mixingKernel</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a8187a8529b4c0530e7d8b8e65f567ae2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>K</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a6ab81f0139b713a05fb0ebe91fc54ed5</anchor>
      <arglist>(const volUnivariateMoment &amp;moment, const volUnivariateMomentFieldSet &amp;moments) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; mixingKernel &gt;</type>
      <name>New</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>add8b3288d1baf0dccf98ad50e9c1a689</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>dict_</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a892ddcb9cba6f50b0396cdb7bf1b4f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dimensionedScalar</type>
      <name>Cphi_</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a88b4336f953c90f0d28a80db8fa28857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dimensionedScalar</type>
      <name>Cmixing_</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a1807597980604a41ccdbd2b34f9f4479</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::mixingModel</name>
    <filename>a00037.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>ada378cf08f9571013cdc7e3c5363f46f</anchor>
      <arglist>(&quot;mixingModel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a8255da669c4a6eac1c759c797ffedde2</anchor>
      <arglist>(autoPtr, mixingModel, dictionary,(                                       const word &amp;name,                                       const dictionary &amp;dict,                                       const surfaceScalarField &amp;phi                       ),(name, dict, phi))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mixingModel</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a48b036b0db3b72f28d8a9ad55fccf461</anchor>
      <arglist>(const word &amp;name, const dictionary &amp;dict, const surfaceScalarField &amp;phi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~mixingModel</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a0a94ee20d9626b89e9b072c1a6fffd47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>aacd6f92a174ec1ebe14983fc21ec498c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; mixingModel &gt;</type>
      <name>New</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a5d4cbf388886a9664347242d9a72b29c</anchor>
      <arglist>(const word &amp;name, const dictionary &amp;dict, const surfaceScalarField &amp;phi)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const surfaceScalarField &amp;</type>
      <name>phi_</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a5828da03a859a3aaa358802cd2daf505</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::mixingModels</name>
    <filename>a00038.html</filename>
  </compound>
  <compound kind="class">
    <name>Foam::mixingSubModels::diffusionModels::molecularDiffusion</name>
    <filename>a00039.html</filename>
    <base>Foam::mixingSubModels::diffusionModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>acccd9d711a961de8b7ddaa1f6582763a</anchor>
      <arglist>(&quot;molecularDiffusion&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>molecularDiffusion</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a41d71a49f9ceacb5bcf471d389c4a71e</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~molecularDiffusion</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a092563f81ebe7ddd529901dccc7c9728</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>momentDiff</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a2607d470834fac9d39bfc0d92f89d41a</anchor>
      <arglist>(const volScalarField &amp;moment) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::diffusionModels::molecularDiffusion</name>
    <filename>a00040.html</filename>
    <base>Foam::populationBalanceSubModels::diffusionModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>acccd9d711a961de8b7ddaa1f6582763a</anchor>
      <arglist>(&quot;molecularDiffusion&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>molecularDiffusion</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a41d71a49f9ceacb5bcf471d389c4a71e</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~molecularDiffusion</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a092563f81ebe7ddd529901dccc7c9728</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>momentDiff</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a2607d470834fac9d39bfc0d92f89d41a</anchor>
      <arglist>(const volScalarField &amp;moment) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::moment</name>
    <filename>a00041.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <class kind="class">Foam::moment::iNew</class>
    <member kind="function">
      <type></type>
      <name>moment</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a0dd4c0fc68639575e5a3e66da70630f6</anchor>
      <arglist>(const word &amp;distributionName, const labelList &amp;cmptOrders, const fvMesh &amp;mesh, const autoPtr&lt; PtrList&lt; nodeType &gt;&gt; &amp;nodes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>moment</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a4fb86284ade7cdb74bea8378ecd0ab36</anchor>
      <arglist>(const word &amp;distributionName, const labelList &amp;cmptOrders, const autoPtr&lt; PtrList&lt; nodeType &gt;&gt; &amp;nodes, const fieldType &amp;initMoment)</arglist>
    </member>
    <member kind="function">
      <type>autoPtr&lt; moment &gt;</type>
      <name>clone</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a7e393a7523438df0e59843176b4bebb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~moment</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a1ee407ef1ef100cb57e2b2308495e6d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>momentName</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>af1a22abea6056cddf89aae3bfbaa9f11</anchor>
      <arglist>(const word &amp;order, const word &amp;distributionName)</arglist>
    </member>
    <member kind="function">
      <type>const word &amp;</type>
      <name>name</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a6d60057c26042eaf7fa1b3b6fb07b582</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const word &amp;</type>
      <name>keyword</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>af064e129930173e0b74f8b529238d310</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nDimensions</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ae4410b8afdbd8d2d0aef13f1944201a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>order</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>aca3a2c038db9ad76dce684b08b8c9b6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const labelList &amp;</type>
      <name>cmptOrders</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ab070a3b6d0957585273c5331d6521334</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ac5c54df7ed3b930268c8d7752c101725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLocalMoment</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a7490ff7789ea684543eefa5a00bcd0b3</anchor>
      <arglist>(label elemi)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static word</type>
      <name>listToWord</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>aef26621d83f587d4dc6f21d1057ba82d</anchor>
      <arglist>(const labelList &amp;lst)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static label</type>
      <name>listToLabel</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ac027d0efa8c54ed71e47cf31f5553ecf</anchor>
      <arglist>(const labelList &amp;lst)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::momentFieldSet</name>
    <filename>a00042.html</filename>
    <templarg>momentType</templarg>
    <templarg>nodeType</templarg>
    <member kind="function">
      <type></type>
      <name>momentFieldSet</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a349fa5253e53dd0dc9e0400cdb11f383</anchor>
      <arglist>(const word &amp;distributionName, const dictionary &amp;dict, const fvMesh &amp;mesh, const autoPtr&lt; PtrList&lt; nodeType &gt;&gt; &amp;nodes, const word &amp;support)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>momentFieldSet</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>acde0580c77dcc8835d0dac0798299f8d</anchor>
      <arglist>(const word &amp;distributionName, const label nMoments, const autoPtr&lt; PtrList&lt; nodeType &gt;&gt; &amp;nodes, const label nDimensions, const Map&lt; label &gt; &amp;momentMap, const word &amp;support)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~momentFieldSet</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a2f005e83e4a818bb3704da88fbe068b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const momentType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5b84520bcbeeefa531bcd011d279b994</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>momentType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5b8f956a65d5b7c3292f28f8b45a4665</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const momentType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a515db69ce884936810e537f8bb03fa44</anchor>
      <arglist>(label a) const </arglist>
    </member>
    <member kind="function">
      <type>momentType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>afffa93ab2aafb32ad9e414f00b6f6273</anchor>
      <arglist>(label a)</arglist>
    </member>
    <member kind="function">
      <type>const momentType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a367ff26b2bc074d64f159bb54691f4fe</anchor>
      <arglist>(label a, label b) const </arglist>
    </member>
    <member kind="function">
      <type>momentType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ad6c20c419c596228f72623615e9b0e27</anchor>
      <arglist>(label a, label b)</arglist>
    </member>
    <member kind="function">
      <type>const momentType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a7daae9cebc6beb9c9379ee84bf46810b</anchor>
      <arglist>(label a, label b, label c) const </arglist>
    </member>
    <member kind="function">
      <type>momentType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ab428c717d588ca3af99b57b8e04ab85d</anchor>
      <arglist>(label a, label b, label c)</arglist>
    </member>
    <member kind="function">
      <type>const Map&lt; label &gt; &amp;</type>
      <name>momentMap</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a35c85d2483436bc2f872bfb5ab3203a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nDimensions</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ae4410b8afdbd8d2d0aef13f1944201a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const word</type>
      <name>support</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ac69c81c5f4ebd5edd8ddc30b03c1d184</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ac5c54df7ed3b930268c8d7752c101725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLocalMoments</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aca46b3594884357388d4178490fb14e9</anchor>
      <arglist>(label elemi)</arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>map</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a8675a91008242f25ed80030311d807e9</anchor>
      <arglist>(label a, label b, label c) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>momentFieldSet&lt; surfaceUnivariateMoment, surfaceScalarNode &gt;</name>
    <filename>a00042.html</filename>
    <member kind="function">
      <type></type>
      <name>momentFieldSet</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a349fa5253e53dd0dc9e0400cdb11f383</anchor>
      <arglist>(const word &amp;distributionName, const dictionary &amp;dict, const fvMesh &amp;mesh, const autoPtr&lt; PtrList&lt; surfaceScalarNode &gt;&gt; &amp;nodes, const word &amp;support)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>momentFieldSet</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>acde0580c77dcc8835d0dac0798299f8d</anchor>
      <arglist>(const word &amp;distributionName, const label nMoments, const autoPtr&lt; PtrList&lt; surfaceScalarNode &gt;&gt; &amp;nodes, const label nDimensions, const Map&lt; label &gt; &amp;momentMap, const word &amp;support)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~momentFieldSet</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a2f005e83e4a818bb3704da88fbe068b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const surfaceUnivariateMoment &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5b84520bcbeeefa531bcd011d279b994</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>surfaceUnivariateMoment &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5b8f956a65d5b7c3292f28f8b45a4665</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const surfaceUnivariateMoment &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a515db69ce884936810e537f8bb03fa44</anchor>
      <arglist>(label a) const</arglist>
    </member>
    <member kind="function">
      <type>surfaceUnivariateMoment &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>afffa93ab2aafb32ad9e414f00b6f6273</anchor>
      <arglist>(label a)</arglist>
    </member>
    <member kind="function">
      <type>const surfaceUnivariateMoment &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a367ff26b2bc074d64f159bb54691f4fe</anchor>
      <arglist>(label a, label b) const</arglist>
    </member>
    <member kind="function">
      <type>surfaceUnivariateMoment &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ad6c20c419c596228f72623615e9b0e27</anchor>
      <arglist>(label a, label b)</arglist>
    </member>
    <member kind="function">
      <type>const surfaceUnivariateMoment &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a7daae9cebc6beb9c9379ee84bf46810b</anchor>
      <arglist>(label a, label b, label c) const</arglist>
    </member>
    <member kind="function">
      <type>surfaceUnivariateMoment &amp;</type>
      <name>operator()</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ab428c717d588ca3af99b57b8e04ab85d</anchor>
      <arglist>(label a, label b, label c)</arglist>
    </member>
    <member kind="function">
      <type>const Map&lt; label &gt; &amp;</type>
      <name>momentMap</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a35c85d2483436bc2f872bfb5ab3203a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nDimensions</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ae4410b8afdbd8d2d0aef13f1944201a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const word</type>
      <name>support</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ac69c81c5f4ebd5edd8ddc30b03c1d184</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ac5c54df7ed3b930268c8d7752c101725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLocalMoments</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aca46b3594884357388d4178490fb14e9</anchor>
      <arglist>(label elemi)</arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>map</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a8675a91008242f25ed80030311d807e9</anchor>
      <arglist>(label a, label b, label c) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::momentFieldSets</name>
    <filename>a00043.html</filename>
  </compound>
  <compound kind="class">
    <name>Foam::moments</name>
    <filename>a00044.html</filename>
  </compound>
  <compound kind="class">
    <name>Foam::momentSet</name>
    <filename>a00045.html</filename>
    <member kind="function">
      <type></type>
      <name>momentSet</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>afa5ff5026de594029768150956bb1cd4</anchor>
      <arglist>(const label nMoments, const labelListList &amp;momentOrders, const word &amp;support, const scalar initValue=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>momentSet</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a220ccb97e171f09caa8dbb7a7e99bcca</anchor>
      <arglist>(const scalarList &amp;m, const labelListList &amp;momentOrders, const word &amp;support)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~momentSet</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a2d461e8178aaecce7fc02ab43bee1230</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const labelListList &amp;</type>
      <name>momentOrders</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>ac0e55cb78e4e838aa1b439585442d439</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nMoments</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a111ae2fd86df6aa54d903019cd7032f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const word</type>
      <name>support</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>ac69c81c5f4ebd5edd8ddc30b03c1d184</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>label</type>
      <name>nMoments_</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a2241219aa524be91ffd4ded3f42f582a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>labelListList</type>
      <name>momentOrders_</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>ab0e2d1fe30234c743b258634abc400a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>word</type>
      <name>support_</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a97745e65ea5305313a9cc8919a99b621</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::nDimensionalMappedList</name>
    <filename>a00046.html</filename>
    <templarg>mappedType</templarg>
    <member kind="function">
      <type></type>
      <name>nDimensionalMappedList</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a131955ebdd927291692db4b6534da849</anchor>
      <arglist>(const label nComponents, const label nDimensions, const Map&lt; label &gt; &amp;momentMap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nDimensionalMappedList</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a6036148fd66713940c8049cb3efad570</anchor>
      <arglist>(const label nDimensions, const labelList &amp;nNodes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~nDimensionalMappedList</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a72f59a21ec484de55ee1f3bac2ae62b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ac9b101d09895b9bf0a4239eac8e772cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>adaa56a13250ec36e513548e0fcbe3a92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a86cad8ff6fe48dac933db8ace0c61269</anchor>
      <arglist>(label a) const </arglist>
    </member>
    <member kind="function">
      <type>mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>abab993b1af0c85ab8c57d75cd59fd281</anchor>
      <arglist>(label a)</arglist>
    </member>
    <member kind="function">
      <type>const mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>aa23c0c7398e514afd22d616d9133dfd4</anchor>
      <arglist>(label a, label b) const </arglist>
    </member>
    <member kind="function">
      <type>mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a230e1ad967205a98e6bdf4bf07a043c0</anchor>
      <arglist>(label a, label b)</arglist>
    </member>
    <member kind="function">
      <type>const mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>adc8d2fccac65b84de8e8e0a96b945337</anchor>
      <arglist>(label a, label b, label c) const </arglist>
    </member>
    <member kind="function">
      <type>mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a8988854af4da7822b22eae73b2519af1</anchor>
      <arglist>(label a, label b, label c)</arglist>
    </member>
    <member kind="function">
      <type>const mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a21e244270c8583b2ad725b72edfc2835</anchor>
      <arglist>(label a, label b, label c, label d) const </arglist>
    </member>
    <member kind="function">
      <type>mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>af41c18c347a4c602f50abc62a6d61823</anchor>
      <arglist>(label a, label b, label c, label d)</arglist>
    </member>
    <member kind="function">
      <type>const mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a57898055f32a1c7b877756fb11e0974d</anchor>
      <arglist>(label a, label b, label c, label d, label e) const </arglist>
    </member>
    <member kind="function">
      <type>mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a02f7508f58135156bc5b7e7271468303</anchor>
      <arglist>(label a, label b, label c, label d, label e)</arglist>
    </member>
    <member kind="function">
      <type>const mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ae6991ede18f26c305e4f6f3fb39e8313</anchor>
      <arglist>(const labelList &amp;l) const </arglist>
    </member>
    <member kind="function">
      <type>mappedType &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a2c09081b7a6560f3225489f478484b66</anchor>
      <arglist>(const labelList &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>const Map&lt; label &gt; &amp;</type>
      <name>map</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ad12a93e5eb729dd6e7dcffe71aff381a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nDimensions</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ae4410b8afdbd8d2d0aef13f1944201a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>map</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ac8b4f0dcfcdb09e14dfc67954290539a</anchor>
      <arglist>(label a, label b, label c, label d, label e) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static word</type>
      <name>listToWord</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>aef26621d83f587d4dc6f21d1057ba82d</anchor>
      <arglist>(const labelList &amp;lst)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static label</type>
      <name>listToLabel</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ac027d0efa8c54ed71e47cf31f5553ecf</anchor>
      <arglist>(const labelList &amp;lst)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nDimensionalMappedList&lt; scalar &gt;</name>
    <filename>a00046.html</filename>
    <member kind="function">
      <type></type>
      <name>nDimensionalMappedList</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a131955ebdd927291692db4b6534da849</anchor>
      <arglist>(const label nComponents, const label nDimensions, const Map&lt; label &gt; &amp;momentMap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nDimensionalMappedList</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a6036148fd66713940c8049cb3efad570</anchor>
      <arglist>(const label nDimensions, const labelList &amp;nNodes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~nDimensionalMappedList</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a72f59a21ec484de55ee1f3bac2ae62b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ac9b101d09895b9bf0a4239eac8e772cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>adaa56a13250ec36e513548e0fcbe3a92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a86cad8ff6fe48dac933db8ace0c61269</anchor>
      <arglist>(label a) const</arglist>
    </member>
    <member kind="function">
      <type>scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>abab993b1af0c85ab8c57d75cd59fd281</anchor>
      <arglist>(label a)</arglist>
    </member>
    <member kind="function">
      <type>const scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>aa23c0c7398e514afd22d616d9133dfd4</anchor>
      <arglist>(label a, label b) const</arglist>
    </member>
    <member kind="function">
      <type>scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a230e1ad967205a98e6bdf4bf07a043c0</anchor>
      <arglist>(label a, label b)</arglist>
    </member>
    <member kind="function">
      <type>const scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>adc8d2fccac65b84de8e8e0a96b945337</anchor>
      <arglist>(label a, label b, label c) const</arglist>
    </member>
    <member kind="function">
      <type>scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a8988854af4da7822b22eae73b2519af1</anchor>
      <arglist>(label a, label b, label c)</arglist>
    </member>
    <member kind="function">
      <type>const scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a21e244270c8583b2ad725b72edfc2835</anchor>
      <arglist>(label a, label b, label c, label d) const</arglist>
    </member>
    <member kind="function">
      <type>scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>af41c18c347a4c602f50abc62a6d61823</anchor>
      <arglist>(label a, label b, label c, label d)</arglist>
    </member>
    <member kind="function">
      <type>const scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a57898055f32a1c7b877756fb11e0974d</anchor>
      <arglist>(label a, label b, label c, label d, label e) const</arglist>
    </member>
    <member kind="function">
      <type>scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a02f7508f58135156bc5b7e7271468303</anchor>
      <arglist>(label a, label b, label c, label d, label e)</arglist>
    </member>
    <member kind="function">
      <type>const scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ae6991ede18f26c305e4f6f3fb39e8313</anchor>
      <arglist>(const labelList &amp;l) const</arglist>
    </member>
    <member kind="function">
      <type>scalar &amp;</type>
      <name>operator()</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a2c09081b7a6560f3225489f478484b66</anchor>
      <arglist>(const labelList &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>const Map&lt; label &gt; &amp;</type>
      <name>map</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ad12a93e5eb729dd6e7dcffe71aff381a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>map</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ac8b4f0dcfcdb09e14dfc67954290539a</anchor>
      <arglist>(label a, label b, label c, label d, label e) const</arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nDimensions</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ae4410b8afdbd8d2d0aef13f1944201a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static word</type>
      <name>listToWord</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>aef26621d83f587d4dc6f21d1057ba82d</anchor>
      <arglist>(const labelList &amp;lst)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static label</type>
      <name>listToLabel</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ac027d0efa8c54ed71e47cf31f5553ecf</anchor>
      <arglist>(const labelList &amp;lst)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::mixingSubModels::diffusionModels::noDiffusion</name>
    <filename>a00047.html</filename>
    <base>Foam::mixingSubModels::diffusionModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a660172304dfa1b418cc1bded338b9fd9</anchor>
      <arglist>(&quot;none&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>noDiffusion</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a790c8815b53962b66948569e5a37601e</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~noDiffusion</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ab00319b0bec238d68ee3f4ae6b34b7b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>momentDiff</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a2607d470834fac9d39bfc0d92f89d41a</anchor>
      <arglist>(const volScalarField &amp;moment) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::diffusionModels::noDiffusion</name>
    <filename>a00048.html</filename>
    <base>Foam::populationBalanceSubModels::diffusionModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a660172304dfa1b418cc1bded338b9fd9</anchor>
      <arglist>(&quot;none&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>noDiffusion</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a790c8815b53962b66948569e5a37601e</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~noDiffusion</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ab00319b0bec238d68ee3f4ae6b34b7b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>momentDiff</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a2607d470834fac9d39bfc0d92f89d41a</anchor>
      <arglist>(const volScalarField &amp;moment) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::mixingModels::noMixing</name>
    <filename>a00049.html</filename>
    <base>Foam::mixingModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a660172304dfa1b418cc1bded338b9fd9</anchor>
      <arglist>(&quot;none&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>noMixing</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a6ecff56a57443f498ad578b8ed7b744d</anchor>
      <arglist>(const word &amp;name, const dictionary &amp;dict, const surfaceScalarField &amp;phi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~noMixing</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>af18366fcca2541617323cb6d4d640047</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>af7d39f0eac0af0ed5785935ac72a1e7d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::nucleationModels::noNucleation</name>
    <filename>a00050.html</filename>
    <base>Foam::populationBalanceSubModels::nucleationModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a660172304dfa1b418cc1bded338b9fd9</anchor>
      <arglist>(&quot;none&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>noNucleation</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>ab3dbbe55baf67b8ce526009289270fc8</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~noNucleation</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a0590b871d4b962ed8418e27e9f3357ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>nucleationSource</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a1a1beb8cf7e0221ebba90ce5aa341f59</anchor>
      <arglist>(const label &amp;momentOrder, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceModels::noPopulationBalance</name>
    <filename>a00051.html</filename>
    <base>Foam::populationBalanceModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a660172304dfa1b418cc1bded338b9fd9</anchor>
      <arglist>(&quot;none&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>noPopulationBalance</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a81cc7bb7784505d09ef2dbf07b9d2a94</anchor>
      <arglist>(const word &amp;name, const dictionary &amp;dict, const surfaceScalarField &amp;phi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~noPopulationBalance</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a879eaa74c53e210bfb1a1356cb30e06a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>af7d39f0eac0af0ed5785935ac72a1e7d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::nucleationModel</name>
    <filename>a00052.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a90992f6d2fd6ea0a8188a87b2e019ad7</anchor>
      <arglist>(&quot;nucleationModel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a1ed401378d0f4f9f0ffb1e6b8a6b6186</anchor>
      <arglist>(autoPtr, nucleationModel, dictionary,(                                       const dictionary &amp;dict,                                       const fvMesh &amp;mesh                       ),(dict, mesh))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nucleationModel</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a0ac17d12d16b428f700ae92fe9416109</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~nucleationModel</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a5d14062dfa0b363acfe6bdefafd6c418</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual scalar</type>
      <name>nucleationSource</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a1ff5f4ad27805c7b4433e716fbc27c02</anchor>
      <arglist>(const label &amp;momentOrder, const label &amp;celli) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; nucleationModel &gt;</type>
      <name>New</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>ac2e910cf2638a653967c10d92c364d2a</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>dict_</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a892ddcb9cba6f50b0396cdb7bf1b4f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const fvMesh &amp;</type>
      <name>mesh_</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a23edeeeecebcef11921a33dd5d990570</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::daughterDistributions::oneQuarterMassRatio</name>
    <filename>a00053.html</filename>
    <base>Foam::populationBalanceSubModels::daughterDistribution</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a7fb47156df4cac064c2b90cb0fc81675</anchor>
      <arglist>(&quot;oneQuarterMassRatio&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oneQuarterMassRatio</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a962d460d76cd33e02cf608ca4beacb77</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oneQuarterMassRatio</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a147fb07ac3fc0d40d665bba9391ef32d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>mD</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>af11d63388088dc9b381b450559526d24</anchor>
      <arglist>(const label &amp;order, const scalar &amp;abscissa) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::PDFTransportModel</name>
    <filename>a00054.html</filename>
    <member kind="function">
      <type></type>
      <name>PDFTransportModel</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a7a484ccf0035787e3f0694401128817a</anchor>
      <arglist>(const word &amp;name, const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PDFTransportModel</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>aa73779ffb5b8359a6463d7c93864fee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>aacd6f92a174ec1ebe14983fc21ec498c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const fvMesh &amp;</type>
      <name>mesh_</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a23edeeeecebcef11921a33dd5d990570</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceModel</name>
    <filename>a00055.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a9723503cf97d2ad82b67092a7aa3e1f3</anchor>
      <arglist>(&quot;populationBalanceModel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a7f8cc56b3b077604a6644432cf501cda</anchor>
      <arglist>(autoPtr, populationBalanceModel, dictionary,(                                       const word &amp;name,                                       const dictionary &amp;dict,                                       const surfaceScalarField &amp;phi                       ),(name, dict, phi))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>populationBalanceModel</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a31d0f5b4494ff076cb81eed74ba4bce2</anchor>
      <arglist>(const word &amp;name, const dictionary &amp;dict, const surfaceScalarField &amp;phi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~populationBalanceModel</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>ae05106936db1115c15304ded19972e3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>aacd6f92a174ec1ebe14983fc21ec498c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; populationBalanceModel &gt;</type>
      <name>New</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a9209244e0920b05f98597bf3d105149d</anchor>
      <arglist>(const word &amp;name, const dictionary &amp;dict, const surfaceScalarField &amp;phi)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const surfaceScalarField &amp;</type>
      <name>phi_</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a5828da03a859a3aaa358802cd2daf505</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::breakupKernels::powerLawBreakup</name>
    <filename>a00056.html</filename>
    <base>Foam::populationBalanceSubModels::breakupKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>ab1fbb32a962ed7ca607b766ec813333b</anchor>
      <arglist>(&quot;powerLaw&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>powerLawBreakup</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a11045d68f7b22d71a19150334861de52</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~powerLawBreakup</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>acfdcf8ac936fab910b034c20837198f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>Kb</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a1e8a125530058d3c06bc7ca11c10c1e2</anchor>
      <arglist>(const scalar &amp;abscissa, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::quadratureApproximation</name>
    <filename>a00057.html</filename>
    <templarg>momentFieldSetType</templarg>
    <templarg>nodeType</templarg>
    <member kind="function">
      <type></type>
      <name>quadratureApproximation</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a36e6d3192d1872bbc6b0cffd5872d86f</anchor>
      <arglist>(const word &amp;name, const fvMesh &amp;mesh, const word &amp;support, const label nDimensions)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~quadratureApproximation</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>adb1b16ba7fd2128342b886ba9fce7537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const word</type>
      <name>name</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a2456166dce07bb1aa57f90fba72ba551</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>fieldMomentInversion &amp;</type>
      <name>momentFieldInverter</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>ab35707f48144b6e8c377d530fda6958e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PtrList&lt; nodeType &gt; &amp;</type>
      <name>nodes</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a91c350105601a2749fccc0b46064c670</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const momentFieldSetType &amp;</type>
      <name>moments</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>abec4ab79350278c1e96c53a7a3211cb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>momentFieldSetType &amp;</type>
      <name>moments</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a7ea917ef655d7358597ba9ef187a6333</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nDimensions</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>ae4410b8afdbd8d2d0aef13f1944201a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nMoments</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a111ae2fd86df6aa54d903019cd7032f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateQuadrature</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>ac4aec727fcdd873ea78763aaeeb86e14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMoments</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>ab46f111920d16a088f2fddf21d658315</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLocalMoments</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a57361ed63aa05333406727264ae648b6</anchor>
      <arglist>(label celli)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateLocalQuadrature</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a177dde920f33639945218c2c55bc83f8</anchor>
      <arglist>(label celli, bool fatalErrorOnFailedRealizabilityTest=true)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const word</type>
      <name>propertiesName</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a1bd8bb0fb60b71d271b25c14b5d66b63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>quadratureApproximation&lt; volUnivariateMomentFieldSet, volScalarNode &gt;</name>
    <filename>a00057.html</filename>
    <member kind="function">
      <type></type>
      <name>quadratureApproximation</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a36e6d3192d1872bbc6b0cffd5872d86f</anchor>
      <arglist>(const word &amp;name, const fvMesh &amp;mesh, const word &amp;support, const label nDimensions)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~quadratureApproximation</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>adb1b16ba7fd2128342b886ba9fce7537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const word</type>
      <name>name</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a2456166dce07bb1aa57f90fba72ba551</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fieldMomentInversion &amp;</type>
      <name>momentFieldInverter</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>ab35707f48144b6e8c377d530fda6958e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PtrList&lt; volScalarNode &gt; &amp;</type>
      <name>nodes</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a91c350105601a2749fccc0b46064c670</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const volUnivariateMomentFieldSet &amp;</type>
      <name>moments</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>abec4ab79350278c1e96c53a7a3211cb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>volUnivariateMomentFieldSet &amp;</type>
      <name>moments</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a7ea917ef655d7358597ba9ef187a6333</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nDimensions</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>ae4410b8afdbd8d2d0aef13f1944201a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nMoments</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a111ae2fd86df6aa54d903019cd7032f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateQuadrature</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>ac4aec727fcdd873ea78763aaeeb86e14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMoments</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>ab46f111920d16a088f2fddf21d658315</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLocalMoments</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a57361ed63aa05333406727264ae648b6</anchor>
      <arglist>(label celli)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateLocalQuadrature</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a177dde920f33639945218c2c55bc83f8</anchor>
      <arglist>(label celli, bool fatalErrorOnFailedRealizabilityTest=true)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const word</type>
      <name>propertiesName</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a1bd8bb0fb60b71d271b25c14b5d66b63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::quadratureNode</name>
    <filename>a00058.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <class kind="class">Foam::quadratureNode::iNew</class>
    <member kind="function">
      <type></type>
      <name>quadratureNode</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>ab4a87e985dbde8b2a7052ca8e443dd00</anchor>
      <arglist>(const word &amp;name, const word &amp;distributionName, const dictionary &amp;nodeDict, const fvMesh &amp;mesh, const dimensionSet &amp;weightDimensions, const dimensionSet &amp;abscissaDimensions, const wordList &amp;boundaryTypes, const bool extended=false, const label nSecondaryNodes=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>quadratureNode</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a5683c102dc4bc1dfdb49072dcf9556d3</anchor>
      <arglist>(const word &amp;name, const word &amp;distributionName, const fvMesh &amp;mesh, const dimensionSet &amp;weightDimensions, const dimensionSet &amp;abscissaDimensions, const bool extended=false, const label nSecondaryNodes=0)</arglist>
    </member>
    <member kind="function">
      <type>autoPtr&lt; quadratureNode&lt; weightType, abscissaType, sigmaType &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a44d59e562ac996bdebdb242602452a52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~quadratureNode</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>ad65970595fbbbcb000b0192eb41d7416</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const word &amp;</type>
      <name>name</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a6d60057c26042eaf7fa1b3b6fb07b582</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extended</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a169e93115091615d69838e87c7f96a14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nSecondaryNodes</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a6d3652c06c7d71d67f199d2104465f3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const weightType &amp;</type>
      <name>primaryWeight</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>aa0a25e3fbd8098cb359e8e92cafba070</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>weightType &amp;</type>
      <name>primaryWeight</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a156872933508c1374a01a7abe6ec039c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const abscissaType &amp;</type>
      <name>primaryAbscissa</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a436581ffd72d3ac178b6d3381f0928ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>abscissaType &amp;</type>
      <name>primaryAbscissa</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a501aa6ae793c60ca18e873cb53c67be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PtrList&lt; weightType &gt; &amp;</type>
      <name>secondaryWeights</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a225ac587d44fce3f6a523a89784379af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PtrList&lt; weightType &gt; &amp;</type>
      <name>secondaryWeights</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>aaa0787d957d3b8ce80ecb60ccf5482d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PtrList&lt; abscissaType &gt; &amp;</type>
      <name>secondaryAbscissae</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>acf323f4680d96d62aca77b85fab8d25c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PtrList&lt; abscissaType &gt; &amp;</type>
      <name>secondaryAbscissae</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>aaff8cd6e5fbfd9b1c86db4f836f9dc2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const sigmaType &amp;</type>
      <name>sigma</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>ae7ed63986006f100bfc1515291f070cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>sigmaType &amp;</type>
      <name>sigma</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a211880a026af3ce558c45adc81be4c3d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::aggregationKernels::sumAggregation</name>
    <filename>a00059.html</filename>
    <base>Foam::populationBalanceSubModels::aggregationKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a4175abdc1459fcf6820150c4e2ecf4da</anchor>
      <arglist>(&quot;sum&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sumAggregation</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a2c16e4ffc6504984bf080838406a8de2</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sumAggregation</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a8e3dea727d5bdc9cd286c349f6dfefff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>Ka</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>aff545f8602677e85abbb1b6c6d0fb20f</anchor>
      <arglist>(const scalar &amp;abscissa1, const scalar &amp;abscissa2, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::daughterDistributions::symmetricFragmentation</name>
    <filename>a00060.html</filename>
    <base>Foam::populationBalanceSubModels::daughterDistribution</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>a999a81c4ca2504ee0ffe0b088c09ba85</anchor>
      <arglist>(&quot;symmetricFragmentation&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>symmetricFragmentation</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>a06ddb9d84a56a2e718822ea145ca1c01</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~symmetricFragmentation</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>a8d44e31c17c944f6a03e3abea48bbea2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>mD</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>af11d63388088dc9b381b450559526d24</anchor>
      <arglist>(const label &amp;order, const scalar &amp;abscissa) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::aggregationKernels::turbulentBrownian</name>
    <filename>a00061.html</filename>
    <base>Foam::populationBalanceSubModels::aggregationKernel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>ad85b05c960956edb395072e9c0879d23</anchor>
      <arglist>(&quot;turbulentBrownian&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>turbulentBrownian</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a69313e09fe86ca111b470eff033b395d</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~turbulentBrownian</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a870db0e339e84ac084658eea637e60a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>Ka</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>aff545f8602677e85abbb1b6c6d0fb20f</anchor>
      <arglist>(const scalar &amp;abscissa1, const scalar &amp;abscissa2, const label &amp;celli) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::mixingSubModels::diffusionModels::turbulentDiffusion</name>
    <filename>a00062.html</filename>
    <base>Foam::mixingSubModels::diffusionModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a7ed8525205e60ab2350365229650b6c9</anchor>
      <arglist>(&quot;turbulentDiffusion&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>turbulentDiffusion</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a53a87c43578f29144d9faa8a85d38ae0</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~turbulentDiffusion</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a4c6867b84e9f2bae67c952fe4e59c0b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>momentDiff</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a2607d470834fac9d39bfc0d92f89d41a</anchor>
      <arglist>(const volScalarField &amp;moment) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::diffusionModels::turbulentDiffusion</name>
    <filename>a00063.html</filename>
    <base>Foam::populationBalanceSubModels::diffusionModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a7ed8525205e60ab2350365229650b6c9</anchor>
      <arglist>(&quot;turbulentDiffusion&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>turbulentDiffusion</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a53a87c43578f29144d9faa8a85d38ae0</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~turbulentDiffusion</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a4c6867b84e9f2bae67c952fe4e59c0b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>momentDiff</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a2607d470834fac9d39bfc0d92f89d41a</anchor>
      <arglist>(const volScalarField &amp;moment) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::PDFTransportModels::mixingModels::turbulentMixing</name>
    <filename>a00064.html</filename>
    <base>Foam::PDFTransportModels::univariatePDFTransportModel</base>
    <base>Foam::mixingModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a07e393e8d7cbf999eaad113a4fc42314</anchor>
      <arglist>(&quot;turbulentMixing&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>turbulentMixing</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>aa538c7e23461fc715edb1f17abbb4910</anchor>
      <arglist>(const word &amp;name, const dictionary &amp;dict, const surfaceScalarField &amp;phi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~turbulentMixing</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>af371dd36dabac7b470898a187554a939</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>af7d39f0eac0af0ed5785935ac72a1e7d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceSubModels::daughterDistributions::uniform</name>
    <filename>a00065.html</filename>
    <base>Foam::populationBalanceSubModels::daughterDistribution</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ac6db16878b991f0c033aa693d16e804d</anchor>
      <arglist>(&quot;uniform&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>uniform</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ac561847e384f201ac93f7f11fd889721</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~uniform</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>acc576355220747307ccd5b343af2e7d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>mD</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>af11d63388088dc9b381b450559526d24</anchor>
      <arglist>(const label &amp;order, const scalar &amp;abscissa) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::univariateMomentAdvection</name>
    <filename>a00066.html</filename>
    <member kind="function">
      <type></type>
      <name>univariateMomentAdvection</name>
      <anchorfile>a00066.html</anchorfile>
      <anchor>aa8fe5fcf476070644d7d052644ba021a</anchor>
      <arglist>(const univariateQuadratureApproximation &amp;quadrature, const surfaceScalarField &amp;phi, const word &amp;support)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~univariateMomentAdvection</name>
      <anchorfile>a00066.html</anchorfile>
      <anchor>af7558438bb9fa34ba37ed51735b3a2e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PtrList&lt; volScalarField &gt; &amp;</type>
      <name>divMoments</name>
      <anchorfile>a00066.html</anchorfile>
      <anchor>a1e42ed478eefece586b6bfb013468be1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>a00066.html</anchorfile>
      <anchor>ac5c54df7ed3b930268c8d7752c101725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>interpolateNodes</name>
      <anchorfile>a00066.html</anchorfile>
      <anchor>aee1fc78125838d352f1209c771319fe7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::univariateMomentInversion</name>
    <filename>a00067.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ab4091ef353bbb2f6fc1c9b8bf3bb06ca</anchor>
      <arglist>(&quot;univariateMomentInversion&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ac3fb26c63be494fef81fc98b96df07bb</anchor>
      <arglist>(autoPtr, univariateMomentInversion, dictionary,(                                                       const dictionary &amp;dict                                       ),(dict))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>univariateMomentInversion</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a2f27635231d56cc368aaa0f2cbdbf8e6</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~univariateMomentInversion</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a3d81ad6e9bef5d0e56c866331fea31a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>calcNQuadratureNodes</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a5b1a824ce74e64ee48d854d74ac8a305</anchor>
      <arglist>(univariateMomentSet &amp;moments)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>correctRecurrence</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>abc58435d4d523225c2de1f627315e1e5</anchor>
      <arglist>(univariateMomentSet &amp;moments, scalarList &amp;alpha, scalarList &amp;beta, const scalar minKnownAbscissa=0, const scalar maxKnownAbscissa=0)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invert</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>af2d72953108395e48c42760a2f79fa5b</anchor>
      <arglist>(univariateMomentSet &amp;moments, const scalar minKnownAbscissa=0, const scalar maxKnownAbscissa=0)</arglist>
    </member>
    <member kind="function">
      <type>const scalarList &amp;</type>
      <name>abscissae</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a25742f47f6927a75ac22cde118b03bde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nNodes</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ab9e8c6ca4d7acb4aeb67a55cbc012286</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const scalarList &amp;</type>
      <name>weights</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a4405ee79c70e650e18641bbf7c8dd743</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; univariateMomentInversion &gt;</type>
      <name>New</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ad4fa6d0402a347ca7a48217bbebed6af</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>JacobiMatrix</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a7e65cdc9e809cd6a315bb1cc38135e3c</anchor>
      <arglist>(univariateMomentSet &amp;moments, scalarSquareMatrix &amp;z, const scalar minKnownAbscissa=0, const scalar maxKnownAbscissa=0)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>label</type>
      <name>nInvertibleMoments_</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a042d2903aac945d2246df06b46bb8a0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>label</type>
      <name>nNodes_</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ac0005b63850c8da82cb91f341a25ffd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalarList</type>
      <name>abscissae_</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a0bfebb14fe9a3d5c7a1293f6d92d1bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalarList</type>
      <name>weights_</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>af51ecc158e56aaae1fc774d6658e9b6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::univariateMomentSet</name>
    <filename>a00068.html</filename>
    <base>Foam::momentSet</base>
    <member kind="function">
      <type></type>
      <name>univariateMomentSet</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ad00a756f64fc3a916ed12a28311ca0d8</anchor>
      <arglist>(const label nMoments, const word &amp;support, const scalar initValue=0, const label nFixedQuadraturePoints=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>univariateMomentSet</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ad0210e9bd66f7a47538343809c285336</anchor>
      <arglist>(const scalarList &amp;m, const word &amp;support, const label nFixedQuadraturePoints=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~univariateMomentSet</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a1d22df074ca1399584587efd06cc562a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const scalarList &amp;</type>
      <name>alphaRecurrence</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ab8a8796d726d48dc10e6c596e7db6094</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>scalarList &amp;</type>
      <name>alphaRecurrence</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a5d692f80be2fae779e373513e263b6e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const scalarList &amp;</type>
      <name>betaRecurrence</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ac28e83c3c38907e738fb554c3e26ba0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>scalarList &amp;</type>
      <name>betaRecurrence</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a763a9605b171b40abbf64f0c13054dfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDegenerate</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a3049a5df266d0671853f077acf4c6975</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFullyRealizable</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a1955fd1ee1096cb91e27063baf97c4d4</anchor>
      <arglist>(bool fatalErrorOnFailedRealizabilityTest=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRealizable</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a58730b945c36dd3aa5042e95e1e9f098</anchor>
      <arglist>(bool fatalErrorOnFailedRealizabilityTest=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSubsetRealizable</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a98ab2e587e2ae018f1c7b23a4a20168e</anchor>
      <arglist>(bool fatalErrorOnFailedRealizabilityTest=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOnMomentSpaceBoundary</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a54a602fe9e0f6b808bf432ed0326ac46</anchor>
      <arglist>(bool fatalErrorOnFailedRealizabilityTest=true)</arglist>
    </member>
    <member kind="function">
      <type>const labelListList &amp;</type>
      <name>momentOrders</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a47393a1ebbe34ea66716a08b5a27ce9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>label</type>
      <name>nRealizableMoments</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a2256488242f928209215b0a3221f6bb8</anchor>
      <arglist>(bool fatalErrorOnFailedRealizabilityTest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ab2d663e44a31918ddbad847b7894b995</anchor>
      <arglist>(const scalarList &amp;weights, const scalarList &amp;abscissae)</arglist>
    </member>
    <member kind="function">
      <type>scalar &amp;</type>
      <name>operator[]</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a0630fe677f21cfd14ac34563442adaf9</anchor>
      <arglist>(const label)</arglist>
    </member>
    <member kind="function">
      <type>const scalar &amp;</type>
      <name>operator[]</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a534a916eb7080818ddbd292257a17c5c</anchor>
      <arglist>(const label) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>realizabilityChecked_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ae90397e9f5eb1ce2b969b6223f3f1ab9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::univariatePDFTransportModel</name>
    <filename>a00069.html</filename>
  </compound>
  <compound kind="class">
    <name>Foam::PDFTransportModels::univariatePDFTransportModel</name>
    <filename>a00070.html</filename>
    <base>Foam::PDFTransportModel</base>
    <member kind="function">
      <type></type>
      <name>univariatePDFTransportModel</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>ac76f0af150281544efbb317164c0075e</anchor>
      <arglist>(const word &amp;name, const dictionary &amp;dict, const fvMesh &amp;mesh, const surfaceScalarField &amp;phi, const word &amp;support)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~univariatePDFTransportModel</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a7c2fb39b317ec861cc76f8a047fb2e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const univariateQuadratureApproximation &amp;</type>
      <name>quadrature</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a200f5b2e653f07470d4ac4fa1a317779</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>af7d39f0eac0af0ed5785935ac72a1e7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>momentDiffusion</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a6dca7ee5f9dcbd74ab958fead1ac05fd</anchor>
      <arglist>(const volUnivariateMoment &amp;moment)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual tmp&lt; fvScalarMatrix &gt;</type>
      <name>implicitMomentSource</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a984a91bb0f818af9554dbc6805598ea3</anchor>
      <arglist>(const volUnivariateMoment &amp;moment)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>explicitMomentSource</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a85b0ae2fdf7934eb3a8fda32f8795fa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual scalar</type>
      <name>cellMomentSource</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>aec57a3aa99ea3029930dc95b50c005e6</anchor>
      <arglist>(label &amp;momentOrder, label &amp;celli)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>univariateQuadratureApproximation</type>
      <name>quadrature_</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a4fa4a0f5eac7545eecc523ed6244beba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>univariateMomentAdvection</type>
      <name>momentAdvection_</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>ae68524f5590b620d61f8e7f0f866cfa0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::populationBalanceModels::univariatePopulationBalance</name>
    <filename>a00071.html</filename>
  </compound>
  <compound kind="class">
    <name>Foam::PDFTransportModels::populationBalanceModels::univariatePopulationBalance</name>
    <filename>a00072.html</filename>
    <base>Foam::PDFTransportModels::univariatePDFTransportModel</base>
    <base>Foam::populationBalanceModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>af984ca0b0b3be9ec6415ab5bc376f666</anchor>
      <arglist>(&quot;univariate&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>univariatePopulationBalance</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad103b4043b4f3e91b86ab100eb3705f9</anchor>
      <arglist>(const word &amp;name, const dictionary &amp;dict, const surfaceScalarField &amp;phi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~univariatePopulationBalance</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a91b7874c9f1109a0de2aa5366cb493cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>af7d39f0eac0af0ed5785935ac72a1e7d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::Vandermonde</name>
    <filename>a00073.html</filename>
    <member kind="function">
      <type></type>
      <name>Vandermonde</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ad67ccfbb9cade9e7a4af8af247cbc760</anchor>
      <arglist>(const scalarDiagonalMatrix &amp;A)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vandermonde</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aa269448837b597fdbbc600d30d0ee801</anchor>
      <arglist>(const scalarSquareMatrix &amp;A, const bool checkVandermonde=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Vandermonde</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a56ad6e00f00ff1794e13eac202ba81dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a0501062a3550e6d046dd2dca738ecfa1</anchor>
      <arglist>(scalarDiagonalMatrix &amp;x, const scalarDiagonalMatrix &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>scalarSquareMatrix</type>
      <name>inv</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a41f917babb4e3753f9e48b975cb03b2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>scalarSquareMatrix</type>
      <name>operator()</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a5abda4d7d3085503b1326c880f77ad36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>scalar</type>
      <name>operator()</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aaed018d61a33bd73175c5c1fc3a6fd84</anchor>
      <arglist>(label i, label j)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam</name>
    <filename>a00249.html</filename>
    <namespace>Foam::mixingModels</namespace>
    <namespace>Foam::mixingSubModels</namespace>
    <namespace>Foam::PDFTransportModels</namespace>
    <namespace>Foam::populationBalanceModels</namespace>
    <namespace>Foam::populationBalanceSubModels</namespace>
    <class kind="class">Foam::basicFieldMomentInversion</class>
    <class kind="class">Foam::betaEQMOM</class>
    <class kind="class">Foam::conditionalMomentInversion</class>
    <class kind="class">Foam::eigenSolver</class>
    <class kind="class">Foam::extendedFieldMomentInversion</class>
    <class kind="class">Foam::extendedMomentInversion</class>
    <class kind="class">Foam::fieldMomentInversion</class>
    <class kind="class">Foam::gammaEQMOM</class>
    <class kind="class">Foam::gaussLobattoMomentInversion</class>
    <class kind="class">Foam::gaussMomentInversion</class>
    <class kind="class">Foam::gaussRadauMomentInversion</class>
    <class kind="class">Foam::lognormalEQMOM</class>
    <class kind="class">Foam::mixingModel</class>
    <class kind="class">Foam::mixingModels</class>
    <class kind="class">Foam::moment</class>
    <class kind="class">Foam::momentFieldSet</class>
    <class kind="class">Foam::momentFieldSets</class>
    <class kind="class">Foam::moments</class>
    <class kind="class">Foam::momentSet</class>
    <class kind="class">Foam::nDimensionalMappedList</class>
    <class kind="class">Foam::PDFTransportModel</class>
    <class kind="class">Foam::populationBalanceModel</class>
    <class kind="class">Foam::quadratureApproximation</class>
    <class kind="class">Foam::quadratureNode</class>
    <class kind="class">Foam::univariateMomentAdvection</class>
    <class kind="class">Foam::univariateMomentInversion</class>
    <class kind="class">Foam::univariateMomentSet</class>
    <class kind="class">Foam::univariatePDFTransportModel</class>
    <class kind="class">Foam::Vandermonde</class>
    <member kind="typedef">
      <type>momentFieldSet&lt; volUnivariateMoment, volScalarNode &gt;</type>
      <name>volUnivariateMomentFieldSet</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ad3c4993319e0afd86f19cfc10dc05503</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>momentFieldSet&lt; surfaceUnivariateMoment, surfaceScalarNode &gt;</type>
      <name>surfaceUnivariateMomentFieldSet</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>aef39351d7073d024b5bd5bea2fc3f279</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>moment&lt; volScalarField, volScalarNode &gt;</type>
      <name>volUnivariateMoment</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a1247bdc497fbec0f2b067b84972d3873</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>moment&lt; surfaceScalarField, surfaceScalarNode &gt;</type>
      <name>surfaceUnivariateMoment</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a2e072c80584b4fea8a0173daccfd399a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>quadratureApproximation&lt; volUnivariateMomentFieldSet, volScalarNode &gt;</type>
      <name>univariateQuadratureApproximation</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a545e54cd8a5ad1ca2192158b263148c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>quadratureNode&lt; volScalarField, volScalarField, volScalarField &gt;</type>
      <name>volScalarNode</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a498baa35a7b2a08cd1c0fe85a3017d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>quadratureNode&lt; surfaceScalarField, surfaceScalarField, surfaceScalarField &gt;</type>
      <name>surfaceScalarNode</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a6323e785fc36ba155e0699c02bd2eee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>quadratureNode&lt; volScalarField, volVectorField, volScalarField &gt;</type>
      <name>volVectorNode</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ab20da0475c2033aaf8cb1dea78031f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>quadratureNode&lt; surfaceScalarField, surfaceVectorField, surfaceScalarField &gt;</type>
      <name>surfaceVectorNode</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a286070562b5d656217b5e7eb79b35e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ae421e805e1c811481923fc7b9556487b</anchor>
      <arglist>(basicFieldMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>afb6d54b8864cf92eb887585f1fbd72b5</anchor>
      <arglist>(fieldMomentInversion, basicFieldMomentInversion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a0c214123cdb6bf17bd34e6ba3a78e85f</anchor>
      <arglist>(extendedFieldMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a081c8abae783263ca5c2d8749b9cad86</anchor>
      <arglist>(fieldMomentInversion, extendedFieldMomentInversion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ab5fa56c52c6ef16704a156e8c403a3cd</anchor>
      <arglist>(fieldMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>abb1c2e5ec33b7d24d9997b1e0c9e2a1b</anchor>
      <arglist>(fieldMomentInversion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>adfa73918fc77af1ed8be0d92e9ee1703</anchor>
      <arglist>(mixingModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a147adac4350a271380c85ada44c2559e</anchor>
      <arglist>(mixingModel, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a1870f4400a3553172ddbd7b520d56e70</anchor>
      <arglist>(gaussLobattoMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>abcbde07469f4b6865f880188dfaaed03</anchor>
      <arglist>(univariateMomentInversion, gaussLobattoMomentInversion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ab292baa664c0b1ffe9902ad93185b24f</anchor>
      <arglist>(gaussMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a819bba564847deaf815d6be3f1c72bac</anchor>
      <arglist>(univariateMomentInversion, gaussMomentInversion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ae28a8693ec96aa0ce2f10a129012de21</anchor>
      <arglist>(gaussRadauMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a0b3e4d883035d960f7255cc8bed29329</anchor>
      <arglist>(univariateMomentInversion, gaussRadauMomentInversion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a2bfa8c5752536cc7ec9c8af1ba407aef</anchor>
      <arglist>(univariateMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a986535dad0b0c7383cd3f0370fa94d7e</anchor>
      <arglist>(univariateMomentInversion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>aba3b5bd4e77aefe9210dac8bc85eaf71</anchor>
      <arglist>(betaEQMOM, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a48cb1021f5b67b9795c0f17ac2d5e2a6</anchor>
      <arglist>(extendedMomentInversion, betaEQMOM, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a9beec8ce64dc3eb33ed3ff09a52d34e5</anchor>
      <arglist>(extendedMomentInversion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a40163a8d4828ced85dea8a29591c7942</anchor>
      <arglist>(extendedMomentInversion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a5538d367d57069f3187e09fb0a7d2a9d</anchor>
      <arglist>(gammaEQMOM, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a58f6c31a874dc8c6ef95eb608f2301e0</anchor>
      <arglist>(extendedMomentInversion, gammaEQMOM, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>abc4d0b6de74a1649ffc1fb65e338c2d7</anchor>
      <arglist>(lognormalEQMOM, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>ad5fccf27937c96a424dd25d4f637bcd8</anchor>
      <arglist>(extendedMomentInversion, lognormalEQMOM, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a5f1f6bb41c55fd770d1a82b1a3f616d1</anchor>
      <arglist>(populationBalanceModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00249.html</anchorfile>
      <anchor>a658da731d19646486da4cad759632bb0</anchor>
      <arglist>(populationBalanceModel, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::mixingModels</name>
    <filename>a00250.html</filename>
    <class kind="class">Foam::mixingModels::noMixing</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00250.html</anchorfile>
      <anchor>acae4135f0a969e5c9ac08c46a86accc1</anchor>
      <arglist>(noMixing, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00250.html</anchorfile>
      <anchor>ade9514ba79b25a6a811619ee6bf9114f</anchor>
      <arglist>(mixingModel, noMixing, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::mixingSubModels</name>
    <filename>a00251.html</filename>
    <namespace>Foam::mixingSubModels::diffusionModels</namespace>
    <namespace>Foam::mixingSubModels::mixingKernels</namespace>
    <class kind="class">Foam::mixingSubModels::diffusionModel</class>
    <class kind="class">Foam::mixingSubModels::mixingKernel</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00251.html</anchorfile>
      <anchor>a35d38e6f01483fb934bf952c4d16dc9e</anchor>
      <arglist>(diffusionModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00251.html</anchorfile>
      <anchor>a66987e2e267fbb32d0569ccf0a28b87d</anchor>
      <arglist>(diffusionModel, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00251.html</anchorfile>
      <anchor>abf81d58a6669ac3c3505cc7bc83fc3ec</anchor>
      <arglist>(mixingKernel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00251.html</anchorfile>
      <anchor>aefa5f150c6459c5dc6b9dd059c74f912</anchor>
      <arglist>(mixingKernel, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::mixingSubModels::diffusionModels</name>
    <filename>a00252.html</filename>
    <class kind="class">Foam::mixingSubModels::diffusionModels::molecularDiffusion</class>
    <class kind="class">Foam::mixingSubModels::diffusionModels::noDiffusion</class>
    <class kind="class">Foam::mixingSubModels::diffusionModels::turbulentDiffusion</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00252.html</anchorfile>
      <anchor>ae282d355e8bb81dcd60d4c2778f12ba5</anchor>
      <arglist>(molecularDiffusion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00252.html</anchorfile>
      <anchor>a024bbc4b37f0b86ec4a0715a76d74ebc</anchor>
      <arglist>(diffusionModel, molecularDiffusion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00252.html</anchorfile>
      <anchor>a432faaba2585abcf703c9b1c67c05331</anchor>
      <arglist>(noDiffusion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00252.html</anchorfile>
      <anchor>a063ffcd74bcfd9ebe3de26bb9433b132</anchor>
      <arglist>(diffusionModel, noDiffusion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00252.html</anchorfile>
      <anchor>a63731383ea80126b6cf10aaf15679fc9</anchor>
      <arglist>(turbulentDiffusion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00252.html</anchorfile>
      <anchor>a97d2209e8102de7cf85a3dc3192735b9</anchor>
      <arglist>(diffusionModel, turbulentDiffusion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::mixingSubModels::mixingKernels</name>
    <filename>a00253.html</filename>
    <class kind="class">Foam::mixingSubModels::mixingKernels::FokkerPlanck</class>
    <class kind="class">Foam::mixingSubModels::mixingKernels::IEM</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00253.html</anchorfile>
      <anchor>a5ee518d2e777e92d55b5142322520192</anchor>
      <arglist>(FokkerPlanck, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00253.html</anchorfile>
      <anchor>a4f2ef8e6b8103aec93807cd5b8659911</anchor>
      <arglist>(mixingKernel, FokkerPlanck, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00253.html</anchorfile>
      <anchor>a17d0080ebb72975f91a6424916c1cb24</anchor>
      <arglist>(IEM, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00253.html</anchorfile>
      <anchor>a9226eeb16fbe06bac390688bc780c047</anchor>
      <arglist>(mixingKernel, IEM, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::PDFTransportModels</name>
    <filename>a00254.html</filename>
    <namespace>Foam::PDFTransportModels::mixingModels</namespace>
    <namespace>Foam::PDFTransportModels::populationBalanceModels</namespace>
    <class kind="class">Foam::PDFTransportModels::univariatePDFTransportModel</class>
  </compound>
  <compound kind="namespace">
    <name>Foam::PDFTransportModels::mixingModels</name>
    <filename>a00255.html</filename>
    <class kind="class">Foam::PDFTransportModels::mixingModels::turbulentMixing</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00255.html</anchorfile>
      <anchor>a3a551541939d8bbcf9fdc374ce4ede08</anchor>
      <arglist>(turbulentMixing, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00255.html</anchorfile>
      <anchor>a5bb611098ff24fdd12820b81036f0c9d</anchor>
      <arglist>(mixingModel, turbulentMixing, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::PDFTransportModels::populationBalanceModels</name>
    <filename>a00256.html</filename>
    <class kind="class">Foam::PDFTransportModels::populationBalanceModels::univariatePopulationBalance</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00256.html</anchorfile>
      <anchor>a141d32d1d596c5abf5a48966fb726556</anchor>
      <arglist>(univariatePopulationBalance, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00256.html</anchorfile>
      <anchor>a908eacb72c5c2b3af99129191b55dc5f</anchor>
      <arglist>(populationBalanceModel, univariatePopulationBalance, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::populationBalanceModels</name>
    <filename>a00257.html</filename>
    <class kind="class">Foam::populationBalanceModels::noPopulationBalance</class>
    <class kind="class">Foam::populationBalanceModels::univariatePopulationBalance</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00257.html</anchorfile>
      <anchor>a737c1912e0e9ef9a0d6b674272e44d7f</anchor>
      <arglist>(noPopulationBalance, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00257.html</anchorfile>
      <anchor>aa4c3c326869bceb4f53d5175577d7c8c</anchor>
      <arglist>(populationBalanceModel, noPopulationBalance, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::populationBalanceSubModels</name>
    <filename>a00258.html</filename>
    <namespace>Foam::populationBalanceSubModels::aggregationKernels</namespace>
    <namespace>Foam::populationBalanceSubModels::breakupKernels</namespace>
    <namespace>Foam::populationBalanceSubModels::daughterDistributions</namespace>
    <namespace>Foam::populationBalanceSubModels::diffusionModels</namespace>
    <namespace>Foam::populationBalanceSubModels::growthModels</namespace>
    <namespace>Foam::populationBalanceSubModels::nucleationModels</namespace>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernel</class>
    <class kind="class">Foam::populationBalanceSubModels::breakupKernel</class>
    <class kind="class">Foam::populationBalanceSubModels::daughterDistribution</class>
    <class kind="class">Foam::populationBalanceSubModels::diffusionModel</class>
    <class kind="class">Foam::populationBalanceSubModels::growthModel</class>
    <class kind="class">Foam::populationBalanceSubModels::nucleationModel</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>abce02722c305557cb5730a9610ba0d51</anchor>
      <arglist>(aggregationKernel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a9dd0aa6f3fae81195037437f9fb2042f</anchor>
      <arglist>(aggregationKernel, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>ab205061f0523b0c0145ab52cb5a15fa7</anchor>
      <arglist>(breakupKernel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a226d16ce92fe729b204a751b4b002599</anchor>
      <arglist>(breakupKernel, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a76416983309f14ff79252f78e2ba5f45</anchor>
      <arglist>(daughterDistribution, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a43b4a6fcc71e245c8ade315846b6d6a5</anchor>
      <arglist>(daughterDistribution, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a31a8f344b0539bd5cce6c4f4576aa297</anchor>
      <arglist>(diffusionModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a448ce681381f516ef5a82ad59235caa1</anchor>
      <arglist>(diffusionModel, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a808c3e596bb1cee3b5e795d38419b367</anchor>
      <arglist>(growthModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a7fcd4c8a5852e11ff67830a07a4cfe7b</anchor>
      <arglist>(growthModel, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>af6421a75bd0356deacdd72271b6f5e83</anchor>
      <arglist>(nucleationModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>a00258.html</anchorfile>
      <anchor>a0b6166697bbb54af81fb439a1105951e</anchor>
      <arglist>(nucleationModel, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::populationBalanceSubModels::aggregationKernels</name>
    <filename>a00259.html</filename>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernels::Brownian</class>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernels::constantAggregation</class>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernels::differentialForceAggregation</class>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernels::hydrodynamicAggregation</class>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernels::sumAggregation</class>
    <class kind="class">Foam::populationBalanceSubModels::aggregationKernels::turbulentBrownian</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a076221bfaf795356aff635f898ab8962</anchor>
      <arglist>(Brownian, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a4c6c4b45a7436ec7f10b0bcd7b9d3a75</anchor>
      <arglist>(aggregationKernel, Brownian, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>af835c9d013a20a975c6f4e57ee9149c8</anchor>
      <arglist>(constantAggregation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>ace2c634a7ff538fbb4744268b13a2c6a</anchor>
      <arglist>(aggregationKernel, constantAggregation, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a901fe18b45ba8ca91a036e0ca43a3916</anchor>
      <arglist>(differentialForceAggregation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a61b52f2b3984830ce75e98417e4a1503</anchor>
      <arglist>(aggregationKernel, differentialForceAggregation, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a636ec3d763c8c887602ea04a51fad475</anchor>
      <arglist>(hydrodynamicAggregation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>af83bce581ea73f24b1228b0fff351b56</anchor>
      <arglist>(aggregationKernel, hydrodynamicAggregation, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>ae400872a78a4a9234d740ae66c007114</anchor>
      <arglist>(sumAggregation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a60fb21d09528d9baad4a0d418f4b125f</anchor>
      <arglist>(aggregationKernel, sumAggregation, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a8aea8aa81c72d6cc9339bc773860a063</anchor>
      <arglist>(turbulentBrownian, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00259.html</anchorfile>
      <anchor>a4425f03c0f3a6b57d979366a338cda40</anchor>
      <arglist>(aggregationKernel, turbulentBrownian, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::populationBalanceSubModels::breakupKernels</name>
    <filename>a00260.html</filename>
    <class kind="class">Foam::populationBalanceSubModels::breakupKernels::AyaziShamlou</class>
    <class kind="class">Foam::populationBalanceSubModels::breakupKernels::constantBreakup</class>
    <class kind="class">Foam::populationBalanceSubModels::breakupKernels::exponentialBreakup</class>
    <class kind="class">Foam::populationBalanceSubModels::breakupKernels::LuoSvendsen</class>
    <class kind="class">Foam::populationBalanceSubModels::breakupKernels::powerLawBreakup</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>aee88bb613072a5f64915965fd870f306</anchor>
      <arglist>(AyaziShamlou, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>ae91cc006297638cdc5e7a12a87ce8e8d</anchor>
      <arglist>(breakupKernel, AyaziShamlou, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>a4338754b0aa20aed5a47b1d88f7fa364</anchor>
      <arglist>(constantBreakup, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>a7337b8a9505305ea7461d4aa5aee0c6f</anchor>
      <arglist>(breakupKernel, constantBreakup, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>a454f3683df96243c1c3df745293c4541</anchor>
      <arglist>(exponentialBreakup, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>a5bfa78660a2a6bf5acc7c81106fde397</anchor>
      <arglist>(breakupKernel, exponentialBreakup, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>a56da0846e22fec8b96568c9df45a9ff0</anchor>
      <arglist>(LuoSvendsen, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>ab0446f84d3f857ce06af2d4d1e5c4303</anchor>
      <arglist>(breakupKernel, LuoSvendsen, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>a8b60ada41289ba4c36eedcf1dca754ac</anchor>
      <arglist>(powerLawBreakup, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00260.html</anchorfile>
      <anchor>aeff8d67156c89fed6ad177f01cb8321e</anchor>
      <arglist>(breakupKernel, powerLawBreakup, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::populationBalanceSubModels::daughterDistributions</name>
    <filename>a00261.html</filename>
    <class kind="class">Foam::populationBalanceSubModels::daughterDistributions::erosion</class>
    <class kind="class">Foam::populationBalanceSubModels::daughterDistributions::fullFragmentation</class>
    <class kind="class">Foam::populationBalanceSubModels::daughterDistributions::oneQuarterMassRatio</class>
    <class kind="class">Foam::populationBalanceSubModels::daughterDistributions::symmetricFragmentation</class>
    <class kind="class">Foam::populationBalanceSubModels::daughterDistributions::uniform</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a01f727723bb2f7668ab5bc761f4c248a</anchor>
      <arglist>(erosion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a62e79e44ef758cea9472b6d5dd80c766</anchor>
      <arglist>(daughterDistribution, erosion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a6997e33657a0008b01a9b12b90d7bd10</anchor>
      <arglist>(fullFragmentation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>ae31c29d61fe94ab903b2c5841b3173f8</anchor>
      <arglist>(daughterDistribution, fullFragmentation, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>af270c7f8972b4b7a65c62654f6a52ba8</anchor>
      <arglist>(oneQuarterMassRatio, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a402d029985d37241642222eff5412b57</anchor>
      <arglist>(daughterDistribution, oneQuarterMassRatio, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a62ad711d8fce03a652f1adeb2fcef84e</anchor>
      <arglist>(symmetricFragmentation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a4a0510d1798895036e2050367b333efc</anchor>
      <arglist>(daughterDistribution, symmetricFragmentation, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>a6cfc6fde57688830e91aa5900a2a3b0b</anchor>
      <arglist>(uniform, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00261.html</anchorfile>
      <anchor>ad4645290635a7726786f906917fa5138</anchor>
      <arglist>(daughterDistribution, uniform, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::populationBalanceSubModels::diffusionModels</name>
    <filename>a00262.html</filename>
    <class kind="class">Foam::populationBalanceSubModels::diffusionModels::molecularDiffusion</class>
    <class kind="class">Foam::populationBalanceSubModels::diffusionModels::noDiffusion</class>
    <class kind="class">Foam::populationBalanceSubModels::diffusionModels::turbulentDiffusion</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00262.html</anchorfile>
      <anchor>ab0071e5b6f1d125b17b3e41b73e7e39a</anchor>
      <arglist>(molecularDiffusion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00262.html</anchorfile>
      <anchor>a0fccf41a74735fc6de29c475cbcd4742</anchor>
      <arglist>(diffusionModel, molecularDiffusion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00262.html</anchorfile>
      <anchor>a842aff0e85dca97889ae993504b45e78</anchor>
      <arglist>(noDiffusion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00262.html</anchorfile>
      <anchor>a6fe185b9482c07be061d5601a474029b</anchor>
      <arglist>(diffusionModel, noDiffusion, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00262.html</anchorfile>
      <anchor>afdc594891515141ee07b11edd796180c</anchor>
      <arglist>(turbulentDiffusion, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00262.html</anchorfile>
      <anchor>a5735ce97238b71965eb6a6817765ae13</anchor>
      <arglist>(diffusionModel, turbulentDiffusion, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::populationBalanceSubModels::growthModels</name>
    <filename>a00263.html</filename>
    <class kind="class">Foam::populationBalanceSubModels::growthModels::constantGrowth</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00263.html</anchorfile>
      <anchor>a05800d31989e6a63a1927724fcce12e4</anchor>
      <arglist>(constantGrowth, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00263.html</anchorfile>
      <anchor>a6ad7bf9e04f9a2619c1348631b695132</anchor>
      <arglist>(growthModel, constantGrowth, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::populationBalanceSubModels::nucleationModels</name>
    <filename>a00264.html</filename>
    <class kind="class">Foam::populationBalanceSubModels::nucleationModels::Miller</class>
    <class kind="class">Foam::populationBalanceSubModels::nucleationModels::noNucleation</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00264.html</anchorfile>
      <anchor>a21c76019aa3870a37ecf5edfc30fcbdb</anchor>
      <arglist>(Miller, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00264.html</anchorfile>
      <anchor>ad2d014bf03b1a0cdaf5ed2889c0bbb2d</anchor>
      <arglist>(nucleationModel, Miller, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>a00264.html</anchorfile>
      <anchor>a57836ace29d15e34f15b8b253e40611f</anchor>
      <arglist>(noNucleation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>a00264.html</anchorfile>
      <anchor>aa0ae238b7a248326a8c9c736e41b078e</anchor>
      <arglist>(nucleationModel, noNucleation, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>OpenQBMM</title>
    <filename>index</filename>
    <docanchor file="index" title="Introduction">intro_sec</docanchor>
    <docanchor file="index" title="Contact information">contact_sec</docanchor>
    <docanchor file="index" title="Copyright">copyright_sec</docanchor>
  </compound>
</tagfile>
